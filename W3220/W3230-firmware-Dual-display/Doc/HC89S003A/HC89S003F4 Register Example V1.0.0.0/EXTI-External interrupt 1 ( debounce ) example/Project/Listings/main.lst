C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 13:29:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          //external interrupt 1 ( debounce )
   3          
   4          #define ALLOCATE_EXTERN
   5          #include "HC89S003F4.h"
   6          
   7          /***************************************************************************************
   8            * @Function   P01 is set to the falling edge interrupt, and the jitter elimination time 
   9                              is set.After each interrupt, LED1 status changes once
  10          ***************************************************************************************/
  11          void main()
  12          {
  13   1      /************************************system initialization****************************************/
  14   1              WDTCCR = 0x00;                                          //Close watchdog
  15   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  16   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  17   1              
  18   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  19   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz
  20   1      /**********************************GPIO initialization**************************************/
  21   1              P0M0 = P0M0&0xF0|0x08;          //Set P00 as push-pull output
  22   1      /**********************************INT1 initialization**************************************/
  23   1              P0M0 = P0M0&0x0F|0x60;          //Set P01 as pull-up input(SMT)
  24   1              P01DBC = 0xFF;                                          //Set debounce time
  25   1              //Calculation of debounce time
  26   1              //PRESCALER*Tosc*P0xDBCT[5:0]-Tosc < debounce time < PRESCALER*Tosc*(P0xDBCT[5:0]+1)-Tosc
  27   1              //                64*0.0625us*63-0.0625us < debounce time < 64*0.0625us*(63+1)-0.0625us
  28   1              //                                         251.9375us < debounce time < 255.9375us
  29   1              PITS0 |= 0x04;                                          //INT1 Falling edge
  30   1              IE |= 0x04;                                                       //enable INT1 interrupt
  31   1              EA = 1;                                                             //enable all interrupt
  32   1              while(1);
  33   1      }
  34          
  35          /***************************************************************************************
  36             INT1 interrupt service function
  37          ***************************************************************************************/
  38          void INT1_Rpt() interrupt INT1_VECTOR 
  39          {
  40   1              PINTF0 &=~ 0x02;                                        //Clear flag bit
  41   1              P0_0 =~ P0_0;                           
  42   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     54    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 13:29:22 PAGE 2   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
