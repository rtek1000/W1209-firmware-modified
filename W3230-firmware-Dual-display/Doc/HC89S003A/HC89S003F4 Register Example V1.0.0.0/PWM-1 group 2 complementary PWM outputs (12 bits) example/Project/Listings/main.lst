C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 13:30:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //PWM-1 group 2 complementary PWM outputs (12 bits) 
   2          
   3          #define ALLOCATE_EXTERN
   4          #include "HC89S003F4.h"
   5          
   6          /***************************************************************************************
   7            * @Function   The output frequency of P22 and P10 is 1.955KHz, the duty cycle is 33.4% square wave, 
   8                          two complementary outputs, the dead time is 18.5us.
   9          ***************************************************************************************/
  10          void main()
  11          {
  12   1      /************************************System initialization ****************************************/
  13   1              WDTCCR = 0x00;                                          //Close watchdog
  14   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  15   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  16   1              
  17   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  18   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz 
  19   1      /************************************PWM initialization****************************************/
  20   1              P2M1 = P2M1&0xF0|0x08;                  //Set P22 as push-pull output
  21   1              P0M0 = P0M0&0x0F|0x80;              //Set P01 as push-pull output
  22   1      
  23   1              PWM0_MAP = 0x22;                                        //PWM0 channel mapping P22 port
  24   1              PWM01_MAP = 0x01;                                       //PWM01 channel mapping P01 port        
  25   1          PWM0C = 0x01;                                               //Both PWM0 and PWM01 are active high, and the clock is divided by 8 
  26   1      
  27   1              //Complementary mode: In complementary mode, the valid period of PWM0 is the duty cycle period, 
  28   1              //and the valid period of PWM01 is the duty cycle complementary period
  29   1      
  30   1              //Period register of PWM0 group         Adjust the period of the PWM group
  31   1              //Duty Cycle Register of PWM0 Group     Adjust the duty cycle of the PWM group
  32   1              //Dead zone register of PWM0 group      Adjust the dead time of the PWM group
  33   1      
  34   1              //Period calculation = 0x03ff / (Fosc / PWM frequency division factor)  
  35   1              //                      = 0x03ff /(16000000 / 8)                        
  36   1              //                      = 1023  /2000000
  37   1              //                      = 511.5us               (1.955KHZ)
  38   1              PWM0PH = 0x03;                                          //The upper 4 bits of the period are set to 0x03
  39   1              PWM0PL = 0xFF;                                          //The lower 8 bits of the period are set to 0xFF
  40   1      
  41   1              //Duty cycle calculation = 0x0155 / (Fosc / PWM frequency division factor)      
  42   1              //                      = 0x0155 /(16000000 / 8)                        
  43   1              //                      = 341    /2000000
  44   1              //                      = 170.5us                  Duty cycle£º 170.5/511.5 = 33.4%
  45   1              PWM0DH = 0x01;                                          //PWM0, PWM01 high 4-bit duty cycle 0x01
  46   1              PWM0DL = 0x55;                                          //PWM0, PWM01 low 8-bit duty cycle 0x55
  47   1      
  48   1              //The dead zone adjusts the reduced time of PWM01 relative to PWM0.
  49   1              //Dead zone calculation = 0x025  / (Fosc / PWM frequency division factor)
  50   1              //                      = 0x025  /(16000000 / 8)                        
  51   1              //                      = 37     /2000000
  52   1              //                      = 18.5us                  
  53   1              
C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 13:30:44 PAGE 2   

  54   1              PWM0DTH = 0x00;                                         //PWM01 high 4-bit dead time 0x00
  55   1          PWM0DTL = 0x25;                                         //PWM01 low 8-bit dead time 0x25
  56   1              PWM0EN = 0x07;                                          //Enable PWM0, work in complementary mode
  57   1          
  58   1              while(1);
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     65    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
