                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module display
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _Hex2CharMap
                                     12 	.globl _setDisplayDot
                                     13 	.globl _initDisplay
                                     14 	.globl _refreshDisplay
                                     15 	.globl _setDisplayTestMode
                                     16 	.globl _setDisplayOff
                                     17 	.globl _setDisplayStr
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
      000000                         22 _activeDigitId:
      000000                         23 	.ds 1
      000001                         24 _displayAC:
      000001                         25 	.ds 3
      000004                         26 _displayD:
      000004                         27 	.ds 3
      000007                         28 _displayOff:
      000007                         29 	.ds 1
      000008                         30 _testMode:
      000008                         31 	.ds 1
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area INITIALIZED
                                     36 ;--------------------------------------------------------
                                     37 ; absolute external ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area DABS (ABS)
                                     40 
                                     41 ; default segment ordering for linker
                                     42 	.area HOME
                                     43 	.area GSINIT
                                     44 	.area GSFINAL
                                     45 	.area CONST
                                     46 	.area INITIALIZER
                                     47 	.area CODE
                                     48 
                                     49 ;--------------------------------------------------------
                                     50 ; global & static initialisations
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area GSINIT
                                     54 	.area GSFINAL
                                     55 	.area GSINIT
                                     56 ;--------------------------------------------------------
                                     57 ; Home
                                     58 ;--------------------------------------------------------
                                     59 	.area HOME
                                     60 	.area HOME
                                     61 ;--------------------------------------------------------
                                     62 ; code
                                     63 ;--------------------------------------------------------
                                     64 	.area CODE
                                     65 ;	./display.c: 86: void initDisplay()
                                     66 ;	-----------------------------------------
                                     67 ;	 function initDisplay
                                     68 ;	-----------------------------------------
      000000                         69 _initDisplay:
                                     70 ;	./display.c: 88: PA_DDR |= SSD_SEG_B_BIT | SSD_SEG_F_BIT;
      000000 C6 50 02         [ 1]   71 	ld	a, 0x5002
      000003 AA 06            [ 1]   72 	or	a, #0x06
      000005 C7 50 02         [ 1]   73 	ld	0x5002, a
                                     74 ;	./display.c: 89: PA_CR1 |= SSD_SEG_B_BIT | SSD_SEG_F_BIT;
      000008 C6 50 03         [ 1]   75 	ld	a, 0x5003
      00000B AA 06            [ 1]   76 	or	a, #0x06
      00000D C7 50 03         [ 1]   77 	ld	0x5003, a
                                     78 ;	./display.c: 90: PB_DDR |= SSD_DIGIT_1_BIT | SSD_DIGIT_2_BIT;
      000010 C6 50 07         [ 1]   79 	ld	a, 0x5007
      000013 AA 30            [ 1]   80 	or	a, #0x30
      000015 C7 50 07         [ 1]   81 	ld	0x5007, a
                                     82 ;	./display.c: 91: PB_CR1 |= SSD_DIGIT_1_BIT | SSD_DIGIT_2_BIT;
      000018 C6 50 08         [ 1]   83 	ld	a, 0x5008
      00001B AA 30            [ 1]   84 	or	a, #0x30
      00001D C7 50 08         [ 1]   85 	ld	0x5008, a
                                     86 ;	./display.c: 92: PC_DDR |= SSD_SEG_C_BIT | SSD_SEG_G_BIT;
      000020 C6 50 0C         [ 1]   87 	ld	a, 0x500c
      000023 AA C0            [ 1]   88 	or	a, #0xc0
      000025 C7 50 0C         [ 1]   89 	ld	0x500c, a
                                     90 ;	./display.c: 93: PC_CR1 |= SSD_SEG_C_BIT | SSD_SEG_G_BIT;
      000028 C6 50 0D         [ 1]   91 	ld	a, 0x500d
      00002B AA C0            [ 1]   92 	or	a, #0xc0
      00002D C7 50 0D         [ 1]   93 	ld	0x500d, a
                                     94 ;	./display.c: 94: PD_DDR |= SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT | SSD_SEG_P_BIT | SSD_DIGIT_3_BIT;
      000030 C6 50 11         [ 1]   95 	ld	a, 0x5011
      000033 AA 3E            [ 1]   96 	or	a, #0x3e
      000035 C7 50 11         [ 1]   97 	ld	0x5011, a
                                     98 ;	./display.c: 95: PD_CR1 |= SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT | SSD_SEG_P_BIT | SSD_DIGIT_3_BIT;
      000038 C6 50 12         [ 1]   99 	ld	a, 0x5012
      00003B AA 3E            [ 1]  100 	or	a, #0x3e
      00003D C7 50 12         [ 1]  101 	ld	0x5012, a
                                    102 ;	./display.c: 96: displayOff = false;
      000040 72 5Fu00u07      [ 1]  103 	clr	_displayOff+0
                                    104 ;	./display.c: 97: activeDigitId = 0;
      000044 72 5Fu00u00      [ 1]  105 	clr	_activeDigitId+0
                                    106 ;	./display.c: 98: setDisplayTestMode (true, "");
      000048 4Br10            [ 1]  107 	push	#<(___str_0 + 0)
      00004A 4Bs00            [ 1]  108 	push	#((___str_0 + 0) >> 8)
      00004C 4B 01            [ 1]  109 	push	#0x01
      00004E CDr00rCA         [ 4]  110 	call	_setDisplayTestMode
      000051 5B 03            [ 2]  111 	addw	sp, #3
                                    112 ;	./display.c: 99: }
      000053 81               [ 4]  113 	ret
                                    114 ;	./display.c: 107: void refreshDisplay()
                                    115 ;	-----------------------------------------
                                    116 ;	 function refreshDisplay
                                    117 ;	-----------------------------------------
      000054                        118 _refreshDisplay:
      000054 88               [ 1]  119 	push	a
                                    120 ;	./display.c: 109: enableDigit (3);
      000055 4B 03            [ 1]  121 	push	#0x03
      000057 CDr01rC0         [ 4]  122 	call	_enableDigit
      00005A 84               [ 1]  123 	pop	a
                                    124 ;	./display.c: 111: if (displayOff) {
      00005B 72 00u00u07 02   [ 2]  125 	btjt	_displayOff+0, #0, 00118$
      000060 20 02            [ 2]  126 	jra	00102$
      000062                        127 00118$:
                                    128 ;	./display.c: 112: return;
      000062 20 64            [ 2]  129 	jra	00106$
      000064                        130 00102$:
                                    131 ;	./display.c: 115: SSD_SEG_BF_PORT &= ~SSD_BF_PORT_MASK;
      000064 C6 50 00         [ 1]  132 	ld	a, 0x5000
      000067 A4 F9            [ 1]  133 	and	a, #0xf9
                                    134 ;	./display.c: 116: SSD_SEG_BF_PORT |= displayAC[activeDigitId] & SSD_BF_PORT_MASK;
      000069 C7 50 00         [ 1]  135 	ld	0x5000, a
      00006C 6B 01            [ 1]  136 	ld	(0x01, sp), a
      00006E 5F               [ 1]  137 	clrw	x
      00006F C6u00u00         [ 1]  138 	ld	a, _activeDigitId+0
      000072 97               [ 1]  139 	ld	xl, a
      000073 1Cr00r01         [ 2]  140 	addw	x, #(_displayAC + 0)
      000076 F6               [ 1]  141 	ld	a, (x)
      000077 A4 06            [ 1]  142 	and	a, #0x06
      000079 1A 01            [ 1]  143 	or	a, (0x01, sp)
      00007B C7 50 00         [ 1]  144 	ld	0x5000, a
                                    145 ;	./display.c: 117: SSD_SEG_CG_PORT &= ~SSD_CG_PORT_MASK;
      00007E C6 50 0A         [ 1]  146 	ld	a, 0x500a
      000081 A4 3F            [ 1]  147 	and	a, #0x3f
                                    148 ;	./display.c: 118: SSD_SEG_CG_PORT |= displayAC[activeDigitId] & SSD_CG_PORT_MASK;
      000083 C7 50 0A         [ 1]  149 	ld	0x500a, a
      000086 6B 01            [ 1]  150 	ld	(0x01, sp), a
      000088 5F               [ 1]  151 	clrw	x
      000089 C6u00u00         [ 1]  152 	ld	a, _activeDigitId+0
      00008C 97               [ 1]  153 	ld	xl, a
      00008D 1Cr00r01         [ 2]  154 	addw	x, #(_displayAC + 0)
      000090 F6               [ 1]  155 	ld	a, (x)
      000091 A4 C0            [ 1]  156 	and	a, #0xc0
      000093 1A 01            [ 1]  157 	or	a, (0x01, sp)
      000095 C7 50 0A         [ 1]  158 	ld	0x500a, a
                                    159 ;	./display.c: 119: SSD_SEG_AEDP_PORT &= ~SSD_AEDP_PORT_MASK;
      000098 C6 50 0F         [ 1]  160 	ld	a, 0x500f
      00009B A4 D1            [ 1]  161 	and	a, #0xd1
                                    162 ;	./display.c: 120: SSD_SEG_AEDP_PORT |= displayD[activeDigitId];
      00009D C7 50 0F         [ 1]  163 	ld	0x500f, a
      0000A0 6B 01            [ 1]  164 	ld	(0x01, sp), a
      0000A2 5F               [ 1]  165 	clrw	x
      0000A3 C6u00u00         [ 1]  166 	ld	a, _activeDigitId+0
      0000A6 97               [ 1]  167 	ld	xl, a
      0000A7 1Cr00r04         [ 2]  168 	addw	x, #(_displayD + 0)
      0000AA F6               [ 1]  169 	ld	a, (x)
      0000AB 1A 01            [ 1]  170 	or	a, (0x01, sp)
      0000AD C7 50 0F         [ 1]  171 	ld	0x500f, a
                                    172 ;	./display.c: 121: enableDigit (activeDigitId);
      0000B0 3Bu00u00         [ 1]  173 	push	_activeDigitId+0
      0000B3 CDr01rC0         [ 4]  174 	call	_enableDigit
      0000B6 84               [ 1]  175 	pop	a
                                    176 ;	./display.c: 123: if (activeDigitId > 1) {
      0000B7 C6u00u00         [ 1]  177 	ld	a, _activeDigitId+0
      0000BA A1 01            [ 1]  178 	cp	a, #0x01
      0000BC 23 06            [ 2]  179 	jrule	00104$
                                    180 ;	./display.c: 124: activeDigitId = 0;
      0000BE 72 5Fu00u00      [ 1]  181 	clr	_activeDigitId+0
      0000C2 20 04            [ 2]  182 	jra	00106$
      0000C4                        183 00104$:
                                    184 ;	./display.c: 126: activeDigitId++;
      0000C4 72 5Cu00u00      [ 1]  185 	inc	_activeDigitId+0
      0000C8                        186 00106$:
                                    187 ;	./display.c: 128: }
      0000C8 84               [ 1]  188 	pop	a
      0000C9 81               [ 4]  189 	ret
                                    190 ;	./display.c: 137: void setDisplayTestMode (bool val, char* str)
                                    191 ;	-----------------------------------------
                                    192 ;	 function setDisplayTestMode
                                    193 ;	-----------------------------------------
      0000CA                        194 _setDisplayTestMode:
                                    195 ;	./display.c: 139: if (!testMode && val) {
      0000CA 72 01u00u08 02   [ 2]  196 	btjf	_testMode+0, #0, 00124$
      0000CF 20 1A            [ 2]  197 	jra	00105$
      0000D1                        198 00124$:
      0000D1 0D 03            [ 1]  199 	tnz	(0x03, sp)
      0000D3 27 16            [ 1]  200 	jreq	00105$
                                    201 ;	./display.c: 140: if (*str == 0) {
      0000D5 1E 04            [ 2]  202 	ldw	x, (0x04, sp)
      0000D7 F6               [ 1]  203 	ld	a, (x)
      0000D8 26 0B            [ 1]  204 	jrne	00102$
                                    205 ;	./display.c: 141: setDisplayStr ("888");
      0000DA 4Br11            [ 1]  206 	push	#<(___str_1 + 0)
      0000DC 4Bs00            [ 1]  207 	push	#((___str_1 + 0) >> 8)
      0000DE CDr01r13         [ 4]  208 	call	_setDisplayStr
      0000E1 5B 02            [ 2]  209 	addw	sp, #2
      0000E3 20 06            [ 2]  210 	jra	00105$
      0000E5                        211 00102$:
                                    212 ;	./display.c: 143: setDisplayStr (str);
      0000E5 89               [ 2]  213 	pushw	x
      0000E6 CDr01r13         [ 4]  214 	call	_setDisplayStr
      0000E9 5B 02            [ 2]  215 	addw	sp, #2
      0000EB                        216 00105$:
                                    217 ;	./display.c: 147: testMode = val;
      0000EB 7B 03            [ 1]  218 	ld	a, (0x03, sp)
      0000ED C7u00u08         [ 1]  219 	ld	_testMode+0, a
                                    220 ;	./display.c: 148: }
      0000F0 81               [ 4]  221 	ret
                                    222 ;	./display.c: 155: void setDisplayOff (bool val)
                                    223 ;	-----------------------------------------
                                    224 ;	 function setDisplayOff
                                    225 ;	-----------------------------------------
      0000F1                        226 _setDisplayOff:
                                    227 ;	./display.c: 157: displayOff = val;
      0000F1 7B 03            [ 1]  228 	ld	a, (0x03, sp)
      0000F3 C7u00u07         [ 1]  229 	ld	_displayOff+0, a
                                    230 ;	./display.c: 158: }
      0000F6 81               [ 4]  231 	ret
                                    232 ;	./display.c: 168: void setDisplayDot (unsigned char id, bool val)
                                    233 ;	-----------------------------------------
                                    234 ;	 function setDisplayDot
                                    235 ;	-----------------------------------------
      0000F7                        236 _setDisplayDot:
                                    237 ;	./display.c: 170: if (val) {
      0000F7 0D 04            [ 1]  238 	tnz	(0x04, sp)
      0000F9 27 0C            [ 1]  239 	jreq	00102$
                                    240 ;	./display.c: 171: displayD[id] |= SSD_SEG_P_BIT;
      0000FB 5F               [ 1]  241 	clrw	x
      0000FC 7B 03            [ 1]  242 	ld	a, (0x03, sp)
      0000FE 97               [ 1]  243 	ld	xl, a
      0000FF 1Cr00r04         [ 2]  244 	addw	x, #(_displayD + 0)
      000102 F6               [ 1]  245 	ld	a, (x)
      000103 AA 04            [ 1]  246 	or	a, #0x04
      000105 F7               [ 1]  247 	ld	(x), a
      000106 81               [ 4]  248 	ret
      000107                        249 00102$:
                                    250 ;	./display.c: 173: displayD[id] &= ~SSD_SEG_P_BIT;
      000107 5F               [ 1]  251 	clrw	x
      000108 7B 03            [ 1]  252 	ld	a, (0x03, sp)
      00010A 97               [ 1]  253 	ld	xl, a
      00010B 1Cr00r04         [ 2]  254 	addw	x, #(_displayD + 0)
      00010E F6               [ 1]  255 	ld	a, (x)
      00010F A4 FB            [ 1]  256 	and	a, #0xfb
      000111 F7               [ 1]  257 	ld	(x), a
                                    258 ;	./display.c: 175: }
      000112 81               [ 4]  259 	ret
                                    260 ;	./display.c: 182: void setDisplayStr (const unsigned char* val)
                                    261 ;	-----------------------------------------
                                    262 ;	 function setDisplayStr
                                    263 ;	-----------------------------------------
      000113                        264 _setDisplayStr:
      000113 52 06            [ 2]  265 	sub	sp, #6
                                    266 ;	./display.c: 187: for (i = 0, d = 0; * (val + i) != 0; i++, d++) {
      000115 0F 06            [ 1]  267 	clr	(0x06, sp)
      000117 0F 05            [ 1]  268 	clr	(0x05, sp)
      000119                        269 00114$:
      000119 5F               [ 1]  270 	clrw	x
      00011A 7B 05            [ 1]  271 	ld	a, (0x05, sp)
      00011C 97               [ 1]  272 	ld	xl, a
      00011D 72 FB 09         [ 2]  273 	addw	x, (0x09, sp)
      000120 F6               [ 1]  274 	ld	a, (x)
      000121 27 18            [ 1]  275 	jreq	00105$
                                    276 ;	./display.c: 188: if (* (val + i) == '.' && i > 0 && * (val + i - 1) != '.') d--;
      000123 A1 2E            [ 1]  277 	cp	a, #0x2e
      000125 26 0E            [ 1]  278 	jrne	00115$
      000127 0D 05            [ 1]  279 	tnz	(0x05, sp)
      000129 27 0A            [ 1]  280 	jreq	00115$
      00012B 1C FF FF         [ 2]  281 	addw	x, #0xffff
      00012E F6               [ 1]  282 	ld	a, (x)
      00012F A1 2E            [ 1]  283 	cp	a, #0x2e
      000131 27 02            [ 1]  284 	jreq	00115$
      000133 0A 06            [ 1]  285 	dec	(0x06, sp)
      000135                        286 00115$:
                                    287 ;	./display.c: 187: for (i = 0, d = 0; * (val + i) != 0; i++, d++) {
      000135 0C 05            [ 1]  288 	inc	(0x05, sp)
      000137 0C 06            [ 1]  289 	inc	(0x06, sp)
      000139 20 DE            [ 2]  290 	jra	00114$
      00013B                        291 00105$:
                                    292 ;	./display.c: 193: if (d > 3) {
      00013B 7B 06            [ 1]  293 	ld	a, (0x06, sp)
      00013D A1 03            [ 1]  294 	cp	a, #0x03
      00013F 23 04            [ 2]  295 	jrule	00107$
                                    296 ;	./display.c: 194: d = 3;
      000141 A6 03            [ 1]  297 	ld	a, #0x03
      000143 6B 06            [ 1]  298 	ld	(0x06, sp), a
      000145                        299 00107$:
                                    300 ;	./display.c: 198: for (i = 3 - d; i > 0; i--) {
      000145 7B 06            [ 1]  301 	ld	a, (0x06, sp)
      000147 6B 05            [ 1]  302 	ld	(0x05, sp), a
      000149 A6 03            [ 1]  303 	ld	a, #0x03
      00014B 10 05            [ 1]  304 	sub	a, (0x05, sp)
      00014D 6B 05            [ 1]  305 	ld	(0x05, sp), a
      00014F                        306 00117$:
      00014F 0D 05            [ 1]  307 	tnz	(0x05, sp)
      000151 27 16            [ 1]  308 	jreq	00108$
                                    309 ;	./display.c: 199: setDigit (3 - i, ' ', false);
      000153 7B 05            [ 1]  310 	ld	a, (0x05, sp)
      000155 6B 04            [ 1]  311 	ld	(0x04, sp), a
      000157 A6 03            [ 1]  312 	ld	a, #0x03
      000159 10 04            [ 1]  313 	sub	a, (0x04, sp)
      00015B 4B 00            [ 1]  314 	push	#0x00
      00015D 4B 20            [ 1]  315 	push	#0x20
      00015F 88               [ 1]  316 	push	a
      000160 CDr02r11         [ 4]  317 	call	_setDigit
      000163 5B 03            [ 2]  318 	addw	sp, #3
                                    319 ;	./display.c: 198: for (i = 3 - d; i > 0; i--) {
      000165 0A 05            [ 1]  320 	dec	(0x05, sp)
      000167 20 E6            [ 2]  321 	jra	00117$
      000169                        322 00108$:
                                    323 ;	./display.c: 203: for (i = 0; d != 0 && *val + i != 0; i++, d--) {
      000169 0F 05            [ 1]  324 	clr	(0x05, sp)
      00016B                        325 00121$:
      00016B 0D 06            [ 1]  326 	tnz	(0x06, sp)
      00016D 27 4E            [ 1]  327 	jreq	00123$
      00016F 16 09            [ 2]  328 	ldw	y, (0x09, sp)
      000171 17 01            [ 2]  329 	ldw	(0x01, sp), y
      000173 93               [ 1]  330 	ldw	x, y
      000174 F6               [ 1]  331 	ld	a, (x)
      000175 6B 04            [ 1]  332 	ld	(0x04, sp), a
      000177 0F 03            [ 1]  333 	clr	(0x03, sp)
      000179 7B 05            [ 1]  334 	ld	a, (0x05, sp)
      00017B 5F               [ 1]  335 	clrw	x
      00017C 97               [ 1]  336 	ld	xl, a
      00017D 72 FB 03         [ 2]  337 	addw	x, (0x03, sp)
      000180 5D               [ 2]  338 	tnzw	x
      000181 27 3A            [ 1]  339 	jreq	00123$
                                    340 ;	./display.c: 204: if (* (val + i + 1) == '.') {
      000183 5F               [ 1]  341 	clrw	x
      000184 7B 05            [ 1]  342 	ld	a, (0x05, sp)
      000186 97               [ 1]  343 	ld	xl, a
      000187 72 FB 01         [ 2]  344 	addw	x, (0x01, sp)
      00018A 90 93            [ 1]  345 	ldw	y, x
      00018C 90 E6 01         [ 1]  346 	ld	a, (0x1, y)
      00018F 6B 04            [ 1]  347 	ld	(0x04, sp), a
                                    348 ;	./display.c: 205: setDigit (d - 1, * (val + i), true);
      000191 F6               [ 1]  349 	ld	a, (x)
      000192 97               [ 1]  350 	ld	xl, a
      000193 7B 06            [ 1]  351 	ld	a, (0x06, sp)
      000195 4A               [ 1]  352 	dec	a
      000196 95               [ 1]  353 	ld	xh, a
                                    354 ;	./display.c: 204: if (* (val + i + 1) == '.') {
      000197 7B 04            [ 1]  355 	ld	a, (0x04, sp)
      000199 A1 2E            [ 1]  356 	cp	a, #0x2e
      00019B 26 0F            [ 1]  357 	jrne	00110$
                                    358 ;	./display.c: 205: setDigit (d - 1, * (val + i), true);
      00019D 4B 01            [ 1]  359 	push	#0x01
      00019F 9F               [ 1]  360 	ld	a, xl
      0001A0 88               [ 1]  361 	push	a
      0001A1 9E               [ 1]  362 	ld	a, xh
      0001A2 88               [ 1]  363 	push	a
      0001A3 CDr02r11         [ 4]  364 	call	_setDigit
      0001A6 5B 03            [ 2]  365 	addw	sp, #3
                                    366 ;	./display.c: 206: i++;
      0001A8 0C 05            [ 1]  367 	inc	(0x05, sp)
      0001AA 20 0B            [ 2]  368 	jra	00122$
      0001AC                        369 00110$:
                                    370 ;	./display.c: 208: setDigit (d - 1, * (val + i), false);
      0001AC 4B 00            [ 1]  371 	push	#0x00
      0001AE 9F               [ 1]  372 	ld	a, xl
      0001AF 88               [ 1]  373 	push	a
      0001B0 9E               [ 1]  374 	ld	a, xh
      0001B1 88               [ 1]  375 	push	a
      0001B2 CDr02r11         [ 4]  376 	call	_setDigit
      0001B5 5B 03            [ 2]  377 	addw	sp, #3
      0001B7                        378 00122$:
                                    379 ;	./display.c: 203: for (i = 0; d != 0 && *val + i != 0; i++, d--) {
      0001B7 0C 05            [ 1]  380 	inc	(0x05, sp)
      0001B9 0A 06            [ 1]  381 	dec	(0x06, sp)
      0001BB 20 AE            [ 2]  382 	jra	00121$
      0001BD                        383 00123$:
                                    384 ;	./display.c: 211: }
      0001BD 5B 06            [ 2]  385 	addw	sp, #6
      0001BF 81               [ 4]  386 	ret
                                    387 ;	./display.c: 221: static void enableDigit (unsigned char id)
                                    388 ;	-----------------------------------------
                                    389 ;	 function enableDigit
                                    390 ;	-----------------------------------------
      0001C0                        391 _enableDigit:
                                    392 ;	./display.c: 223: switch (id) {
      0001C0 7B 03            [ 1]  393 	ld	a, (0x03, sp)
      0001C2 A1 00            [ 1]  394 	cp	a, #0x00
      0001C4 27 0D            [ 1]  395 	jreq	00101$
      0001C6 7B 03            [ 1]  396 	ld	a, (0x03, sp)
      0001C8 4A               [ 1]  397 	dec	a
      0001C9 27 1A            [ 1]  398 	jreq	00102$
      0001CB 7B 03            [ 1]  399 	ld	a, (0x03, sp)
      0001CD A1 02            [ 1]  400 	cp	a, #0x02
      0001CF 27 26            [ 1]  401 	jreq	00103$
      0001D1 20 31            [ 2]  402 	jra	00104$
                                    403 ;	./display.c: 224: case 0:
      0001D3                        404 00101$:
                                    405 ;	./display.c: 225: SSD_DIGIT_12_PORT &= ~SSD_DIGIT_1_BIT;
      0001D3 C6 50 05         [ 1]  406 	ld	a, 0x5005
      0001D6 A4 EF            [ 1]  407 	and	a, #0xef
                                    408 ;	./display.c: 226: SSD_DIGIT_12_PORT |= SSD_DIGIT_2_BIT;
      0001D8 C7 50 05         [ 1]  409 	ld	0x5005, a
      0001DB AA 20            [ 1]  410 	or	a, #0x20
      0001DD C7 50 05         [ 1]  411 	ld	0x5005, a
                                    412 ;	./display.c: 227: SSD_DIGIT_3_PORT |= SSD_DIGIT_3_BIT;
      0001E0 72 18 50 0F      [ 1]  413 	bset	20495, #4
                                    414 ;	./display.c: 228: break;
      0001E4 81               [ 4]  415 	ret
                                    416 ;	./display.c: 230: case 1:
      0001E5                        417 00102$:
                                    418 ;	./display.c: 231: SSD_DIGIT_12_PORT &= ~SSD_DIGIT_2_BIT;
      0001E5 C6 50 05         [ 1]  419 	ld	a, 0x5005
      0001E8 A4 DF            [ 1]  420 	and	a, #0xdf
                                    421 ;	./display.c: 232: SSD_DIGIT_12_PORT |= SSD_DIGIT_1_BIT;
      0001EA C7 50 05         [ 1]  422 	ld	0x5005, a
      0001ED AA 10            [ 1]  423 	or	a, #0x10
      0001EF C7 50 05         [ 1]  424 	ld	0x5005, a
                                    425 ;	./display.c: 233: SSD_DIGIT_3_PORT |= SSD_DIGIT_3_BIT;
      0001F2 72 18 50 0F      [ 1]  426 	bset	20495, #4
                                    427 ;	./display.c: 234: break;
      0001F6 81               [ 4]  428 	ret
                                    429 ;	./display.c: 236: case 2:
      0001F7                        430 00103$:
                                    431 ;	./display.c: 237: SSD_DIGIT_3_PORT &= ~SSD_DIGIT_3_BIT;
      0001F7 72 19 50 0F      [ 1]  432 	bres	20495, #4
                                    433 ;	./display.c: 238: SSD_DIGIT_12_PORT |= SSD_DIGIT_1_BIT | SSD_DIGIT_2_BIT;
      0001FB C6 50 05         [ 1]  434 	ld	a, 0x5005
      0001FE AA 30            [ 1]  435 	or	a, #0x30
      000200 C7 50 05         [ 1]  436 	ld	0x5005, a
                                    437 ;	./display.c: 239: break;
      000203 81               [ 4]  438 	ret
                                    439 ;	./display.c: 241: default:
      000204                        440 00104$:
                                    441 ;	./display.c: 242: SSD_DIGIT_12_PORT |= SSD_DIGIT_1_BIT | SSD_DIGIT_2_BIT;
      000204 C6 50 05         [ 1]  442 	ld	a, 0x5005
      000207 AA 30            [ 1]  443 	or	a, #0x30
      000209 C7 50 05         [ 1]  444 	ld	0x5005, a
                                    445 ;	./display.c: 243: SSD_DIGIT_3_PORT |= SSD_DIGIT_3_BIT;
      00020C 72 18 50 0F      [ 1]  446 	bset	20495, #4
                                    447 ;	./display.c: 245: }
                                    448 ;	./display.c: 246: }
      000210 81               [ 4]  449 	ret
                                    450 ;	./display.c: 276: static void setDigit (unsigned char id, unsigned char val, bool dot)
                                    451 ;	-----------------------------------------
                                    452 ;	 function setDigit
                                    453 ;	-----------------------------------------
      000211                        454 _setDigit:
                                    455 ;	./display.c: 279: if (id > 2) return;
      000211 7B 03            [ 1]  456 	ld	a, (0x03, sp)
      000213 A1 02            [ 1]  457 	cp	a, #0x02
      000215 23 01            [ 2]  458 	jrule	00102$
      000217 81               [ 4]  459 	ret
      000218                        460 00102$:
                                    461 ;	./display.c: 281: if (testMode) return;
      000218 72 00u00u08 02   [ 2]  462 	btjt	_testMode+0, #0, 00272$
      00021D 20 01            [ 2]  463 	jra	00104$
      00021F                        464 00272$:
      00021F 81               [ 4]  465 	ret
      000220                        466 00104$:
                                    467 ;	./display.c: 283: switch (val) {
      000220 7B 04            [ 1]  468 	ld	a, (0x04, sp)
      000222 A1 20            [ 1]  469 	cp	a, #0x20
      000224 26 03            [ 1]  470 	jrne	00274$
      000226 CCr03r0F         [ 2]  471 	jp	00106$
      000229                        472 00274$:
      000229 7B 04            [ 1]  473 	ld	a, (0x04, sp)
      00022B A1 2D            [ 1]  474 	cp	a, #0x2d
      00022D 26 03            [ 1]  475 	jrne	00277$
      00022F CCr02rFB         [ 2]  476 	jp	00105$
      000232                        477 00277$:
      000232 7B 04            [ 1]  478 	ld	a, (0x04, sp)
      000234 A1 30            [ 1]  479 	cp	a, #0x30
      000236 26 03            [ 1]  480 	jrne	00280$
      000238 CCr03r22         [ 2]  481 	jp	00107$
      00023B                        482 00280$:
      00023B 7B 04            [ 1]  483 	ld	a, (0x04, sp)
      00023D A1 31            [ 1]  484 	cp	a, #0x31
      00023F 26 03            [ 1]  485 	jrne	00283$
      000241 CCr03r37         [ 2]  486 	jp	00108$
      000244                        487 00283$:
      000244 7B 04            [ 1]  488 	ld	a, (0x04, sp)
      000246 A1 32            [ 1]  489 	cp	a, #0x32
      000248 26 03            [ 1]  490 	jrne	00286$
      00024A CCr03r4B         [ 2]  491 	jp	00109$
      00024D                        492 00286$:
      00024D 7B 04            [ 1]  493 	ld	a, (0x04, sp)
      00024F A1 33            [ 1]  494 	cp	a, #0x33
      000251 26 03            [ 1]  495 	jrne	00289$
      000253 CCr03r60         [ 2]  496 	jp	00110$
      000256                        497 00289$:
      000256 7B 04            [ 1]  498 	ld	a, (0x04, sp)
      000258 A1 34            [ 1]  499 	cp	a, #0x34
      00025A 26 03            [ 1]  500 	jrne	00292$
      00025C CCr03r75         [ 2]  501 	jp	00111$
      00025F                        502 00292$:
      00025F 7B 04            [ 1]  503 	ld	a, (0x04, sp)
      000261 A1 35            [ 1]  504 	cp	a, #0x35
      000263 26 03            [ 1]  505 	jrne	00295$
      000265 CCr03r89         [ 2]  506 	jp	00112$
      000268                        507 00295$:
      000268 7B 04            [ 1]  508 	ld	a, (0x04, sp)
      00026A A1 36            [ 1]  509 	cp	a, #0x36
      00026C 26 03            [ 1]  510 	jrne	00298$
      00026E CCr03r9E         [ 2]  511 	jp	00113$
      000271                        512 00298$:
      000271 7B 04            [ 1]  513 	ld	a, (0x04, sp)
      000273 A1 37            [ 1]  514 	cp	a, #0x37
      000275 26 03            [ 1]  515 	jrne	00301$
      000277 CCr03rB3         [ 2]  516 	jp	00114$
      00027A                        517 00301$:
      00027A 7B 04            [ 1]  518 	ld	a, (0x04, sp)
      00027C A1 38            [ 1]  519 	cp	a, #0x38
      00027E 26 03            [ 1]  520 	jrne	00304$
      000280 CCr03rC8         [ 2]  521 	jp	00115$
      000283                        522 00304$:
      000283 7B 04            [ 1]  523 	ld	a, (0x04, sp)
      000285 A1 39            [ 1]  524 	cp	a, #0x39
      000287 26 03            [ 1]  525 	jrne	00307$
      000289 CCr03rDD         [ 2]  526 	jp	00116$
      00028C                        527 00307$:
      00028C 7B 04            [ 1]  528 	ld	a, (0x04, sp)
      00028E A1 41            [ 1]  529 	cp	a, #0x41
      000290 26 03            [ 1]  530 	jrne	00310$
      000292 CCr03rF2         [ 2]  531 	jp	00117$
      000295                        532 00310$:
      000295 7B 04            [ 1]  533 	ld	a, (0x04, sp)
      000297 A1 42            [ 1]  534 	cp	a, #0x42
      000299 26 03            [ 1]  535 	jrne	00313$
      00029B CCr04r07         [ 2]  536 	jp	00118$
      00029E                        537 00313$:
      00029E 7B 04            [ 1]  538 	ld	a, (0x04, sp)
      0002A0 A1 43            [ 1]  539 	cp	a, #0x43
      0002A2 26 03            [ 1]  540 	jrne	00316$
      0002A4 CCr04r1C         [ 2]  541 	jp	00119$
      0002A7                        542 00316$:
      0002A7 7B 04            [ 1]  543 	ld	a, (0x04, sp)
      0002A9 A1 44            [ 1]  544 	cp	a, #0x44
      0002AB 26 03            [ 1]  545 	jrne	00319$
      0002AD CCr04r31         [ 2]  546 	jp	00120$
      0002B0                        547 00319$:
      0002B0 7B 04            [ 1]  548 	ld	a, (0x04, sp)
      0002B2 A1 45            [ 1]  549 	cp	a, #0x45
      0002B4 26 03            [ 1]  550 	jrne	00322$
      0002B6 CCr04r46         [ 2]  551 	jp	00121$
      0002B9                        552 00322$:
      0002B9 7B 04            [ 1]  553 	ld	a, (0x04, sp)
      0002BB A1 46            [ 1]  554 	cp	a, #0x46
      0002BD 26 03            [ 1]  555 	jrne	00325$
      0002BF CCr04r5B         [ 2]  556 	jp	00122$
      0002C2                        557 00325$:
      0002C2 7B 04            [ 1]  558 	ld	a, (0x04, sp)
      0002C4 A1 48            [ 1]  559 	cp	a, #0x48
      0002C6 26 03            [ 1]  560 	jrne	00328$
      0002C8 CCr04r70         [ 2]  561 	jp	00123$
      0002CB                        562 00328$:
      0002CB 7B 04            [ 1]  563 	ld	a, (0x04, sp)
      0002CD A1 4C            [ 1]  564 	cp	a, #0x4c
      0002CF 26 03            [ 1]  565 	jrne	00331$
      0002D1 CCr04r85         [ 2]  566 	jp	00124$
      0002D4                        567 00331$:
      0002D4 7B 04            [ 1]  568 	ld	a, (0x04, sp)
      0002D6 A1 4E            [ 1]  569 	cp	a, #0x4e
      0002D8 26 03            [ 1]  570 	jrne	00334$
      0002DA CCr04r99         [ 2]  571 	jp	00125$
      0002DD                        572 00334$:
      0002DD 7B 04            [ 1]  573 	ld	a, (0x04, sp)
      0002DF A1 4F            [ 1]  574 	cp	a, #0x4f
      0002E1 26 03            [ 1]  575 	jrne	00337$
      0002E3 CCr04rAD         [ 2]  576 	jp	00126$
      0002E6                        577 00337$:
      0002E6 7B 04            [ 1]  578 	ld	a, (0x04, sp)
      0002E8 A1 50            [ 1]  579 	cp	a, #0x50
      0002EA 26 03            [ 1]  580 	jrne	00340$
      0002EC CCr04rC1         [ 2]  581 	jp	00127$
      0002EF                        582 00340$:
      0002EF 7B 04            [ 1]  583 	ld	a, (0x04, sp)
      0002F1 A1 52            [ 1]  584 	cp	a, #0x52
      0002F3 26 03            [ 1]  585 	jrne	00343$
      0002F5 CCr04rD5         [ 2]  586 	jp	00128$
      0002F8                        587 00343$:
      0002F8 CCr04rE9         [ 2]  588 	jp	00129$
                                    589 ;	./display.c: 284: case '-':
      0002FB                        590 00105$:
                                    591 ;	./display.c: 285: displayAC[id] = SSD_SEG_G_BIT;
      0002FB 5F               [ 1]  592 	clrw	x
      0002FC 7B 03            [ 1]  593 	ld	a, (0x03, sp)
      0002FE 97               [ 1]  594 	ld	xl, a
      0002FF A6 40            [ 1]  595 	ld	a, #0x40
      000301 D7u00u01         [ 1]  596 	ld	((_displayAC + 0), x), a
                                    597 ;	./display.c: 286: displayD[id] = 0;
      000304 5F               [ 1]  598 	clrw	x
      000305 7B 03            [ 1]  599 	ld	a, (0x03, sp)
      000307 97               [ 1]  600 	ld	xl, a
      000308 72 4Fu00u04      [ 1]  601 	clr	((_displayD + 0), x)
                                    602 ;	./display.c: 287: break;
      00030C CCr04rFA         [ 2]  603 	jp	00130$
                                    604 ;	./display.c: 289: case ' ':
      00030F                        605 00106$:
                                    606 ;	./display.c: 290: displayAC[id] = 0;
      00030F 5F               [ 1]  607 	clrw	x
      000310 7B 03            [ 1]  608 	ld	a, (0x03, sp)
      000312 97               [ 1]  609 	ld	xl, a
      000313 72 4Fu00u01      [ 1]  610 	clr	((_displayAC + 0), x)
                                    611 ;	./display.c: 291: displayD[id] = 0;
      000317 5F               [ 1]  612 	clrw	x
      000318 7B 03            [ 1]  613 	ld	a, (0x03, sp)
      00031A 97               [ 1]  614 	ld	xl, a
      00031B 72 4Fu00u04      [ 1]  615 	clr	((_displayD + 0), x)
                                    616 ;	./display.c: 292: break;
      00031F CCr04rFA         [ 2]  617 	jp	00130$
                                    618 ;	./display.c: 294: case '0':
      000322                        619 00107$:
                                    620 ;	./display.c: 295: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_F_BIT | SSD_SEG_C_BIT;
      000322 5F               [ 1]  621 	clrw	x
      000323 7B 03            [ 1]  622 	ld	a, (0x03, sp)
      000325 97               [ 1]  623 	ld	xl, a
      000326 A6 86            [ 1]  624 	ld	a, #0x86
      000328 D7u00u01         [ 1]  625 	ld	((_displayAC + 0), x), a
                                    626 ;	./display.c: 296: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      00032B 5F               [ 1]  627 	clrw	x
      00032C 7B 03            [ 1]  628 	ld	a, (0x03, sp)
      00032E 97               [ 1]  629 	ld	xl, a
      00032F A6 2A            [ 1]  630 	ld	a, #0x2a
      000331 D7u00u04         [ 1]  631 	ld	((_displayD + 0), x), a
                                    632 ;	./display.c: 297: break;
      000334 CCr04rFA         [ 2]  633 	jp	00130$
                                    634 ;	./display.c: 299: case '1':
      000337                        635 00108$:
                                    636 ;	./display.c: 300: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT;
      000337 5F               [ 1]  637 	clrw	x
      000338 7B 03            [ 1]  638 	ld	a, (0x03, sp)
      00033A 97               [ 1]  639 	ld	xl, a
      00033B A6 84            [ 1]  640 	ld	a, #0x84
      00033D D7u00u01         [ 1]  641 	ld	((_displayAC + 0), x), a
                                    642 ;	./display.c: 301: displayD[id] = 0;
      000340 5F               [ 1]  643 	clrw	x
      000341 7B 03            [ 1]  644 	ld	a, (0x03, sp)
      000343 97               [ 1]  645 	ld	xl, a
      000344 72 4Fu00u04      [ 1]  646 	clr	((_displayD + 0), x)
                                    647 ;	./display.c: 302: break;
      000348 CCr04rFA         [ 2]  648 	jp	00130$
                                    649 ;	./display.c: 304: case '2':
      00034B                        650 00109$:
                                    651 ;	./display.c: 305: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_G_BIT;
      00034B 5F               [ 1]  652 	clrw	x
      00034C 7B 03            [ 1]  653 	ld	a, (0x03, sp)
      00034E 97               [ 1]  654 	ld	xl, a
      00034F A6 44            [ 1]  655 	ld	a, #0x44
      000351 D7u00u01         [ 1]  656 	ld	((_displayAC + 0), x), a
                                    657 ;	./display.c: 306: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      000354 5F               [ 1]  658 	clrw	x
      000355 7B 03            [ 1]  659 	ld	a, (0x03, sp)
      000357 97               [ 1]  660 	ld	xl, a
      000358 A6 2A            [ 1]  661 	ld	a, #0x2a
      00035A D7u00u04         [ 1]  662 	ld	((_displayD + 0), x), a
                                    663 ;	./display.c: 307: break;
      00035D CCr04rFA         [ 2]  664 	jp	00130$
                                    665 ;	./display.c: 309: case '3':
      000360                        666 00110$:
                                    667 ;	./display.c: 310: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_G_BIT;
      000360 5F               [ 1]  668 	clrw	x
      000361 7B 03            [ 1]  669 	ld	a, (0x03, sp)
      000363 97               [ 1]  670 	ld	xl, a
      000364 A6 C4            [ 1]  671 	ld	a, #0xc4
      000366 D7u00u01         [ 1]  672 	ld	((_displayAC + 0), x), a
                                    673 ;	./display.c: 311: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT;
      000369 5F               [ 1]  674 	clrw	x
      00036A 7B 03            [ 1]  675 	ld	a, (0x03, sp)
      00036C 97               [ 1]  676 	ld	xl, a
      00036D A6 28            [ 1]  677 	ld	a, #0x28
      00036F D7u00u04         [ 1]  678 	ld	((_displayD + 0), x), a
                                    679 ;	./display.c: 312: break;
      000372 CCr04rFA         [ 2]  680 	jp	00130$
                                    681 ;	./display.c: 314: case '4':
      000375                        682 00111$:
                                    683 ;	./display.c: 315: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      000375 5F               [ 1]  684 	clrw	x
      000376 7B 03            [ 1]  685 	ld	a, (0x03, sp)
      000378 97               [ 1]  686 	ld	xl, a
      000379 A6 C6            [ 1]  687 	ld	a, #0xc6
      00037B D7u00u01         [ 1]  688 	ld	((_displayAC + 0), x), a
                                    689 ;	./display.c: 316: displayD[id] = 0;
      00037E 5F               [ 1]  690 	clrw	x
      00037F 7B 03            [ 1]  691 	ld	a, (0x03, sp)
      000381 97               [ 1]  692 	ld	xl, a
      000382 72 4Fu00u04      [ 1]  693 	clr	((_displayD + 0), x)
                                    694 ;	./display.c: 317: break;
      000386 CCr04rFA         [ 2]  695 	jp	00130$
                                    696 ;	./display.c: 319: case '5':
      000389                        697 00112$:
                                    698 ;	./display.c: 320: displayAC[id] = SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      000389 5F               [ 1]  699 	clrw	x
      00038A 7B 03            [ 1]  700 	ld	a, (0x03, sp)
      00038C 97               [ 1]  701 	ld	xl, a
      00038D A6 C2            [ 1]  702 	ld	a, #0xc2
      00038F D7u00u01         [ 1]  703 	ld	((_displayAC + 0), x), a
                                    704 ;	./display.c: 321: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT;
      000392 5F               [ 1]  705 	clrw	x
      000393 7B 03            [ 1]  706 	ld	a, (0x03, sp)
      000395 97               [ 1]  707 	ld	xl, a
      000396 A6 28            [ 1]  708 	ld	a, #0x28
      000398 D7u00u04         [ 1]  709 	ld	((_displayD + 0), x), a
                                    710 ;	./display.c: 322: break;
      00039B CCr04rFA         [ 2]  711 	jp	00130$
                                    712 ;	./display.c: 324: case '6':
      00039E                        713 00113$:
                                    714 ;	./display.c: 325: displayAC[id] = SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      00039E 5F               [ 1]  715 	clrw	x
      00039F 7B 03            [ 1]  716 	ld	a, (0x03, sp)
      0003A1 97               [ 1]  717 	ld	xl, a
      0003A2 A6 C2            [ 1]  718 	ld	a, #0xc2
      0003A4 D7u00u01         [ 1]  719 	ld	((_displayAC + 0), x), a
                                    720 ;	./display.c: 326: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      0003A7 5F               [ 1]  721 	clrw	x
      0003A8 7B 03            [ 1]  722 	ld	a, (0x03, sp)
      0003AA 97               [ 1]  723 	ld	xl, a
      0003AB A6 2A            [ 1]  724 	ld	a, #0x2a
      0003AD D7u00u04         [ 1]  725 	ld	((_displayD + 0), x), a
                                    726 ;	./display.c: 327: break;
      0003B0 CCr04rFA         [ 2]  727 	jp	00130$
                                    728 ;	./display.c: 329: case '7':
      0003B3                        729 00114$:
                                    730 ;	./display.c: 330: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT;
      0003B3 5F               [ 1]  731 	clrw	x
      0003B4 7B 03            [ 1]  732 	ld	a, (0x03, sp)
      0003B6 97               [ 1]  733 	ld	xl, a
      0003B7 A6 84            [ 1]  734 	ld	a, #0x84
      0003B9 D7u00u01         [ 1]  735 	ld	((_displayAC + 0), x), a
                                    736 ;	./display.c: 331: displayD[id] = SSD_SEG_A_BIT;
      0003BC 5F               [ 1]  737 	clrw	x
      0003BD 7B 03            [ 1]  738 	ld	a, (0x03, sp)
      0003BF 97               [ 1]  739 	ld	xl, a
      0003C0 A6 20            [ 1]  740 	ld	a, #0x20
      0003C2 D7u00u04         [ 1]  741 	ld	((_displayD + 0), x), a
                                    742 ;	./display.c: 332: break;
      0003C5 CCr04rFA         [ 2]  743 	jp	00130$
                                    744 ;	./display.c: 334: case '8':
      0003C8                        745 00115$:
                                    746 ;	./display.c: 335: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      0003C8 5F               [ 1]  747 	clrw	x
      0003C9 7B 03            [ 1]  748 	ld	a, (0x03, sp)
      0003CB 97               [ 1]  749 	ld	xl, a
      0003CC A6 C6            [ 1]  750 	ld	a, #0xc6
      0003CE D7u00u01         [ 1]  751 	ld	((_displayAC + 0), x), a
                                    752 ;	./display.c: 336: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      0003D1 5F               [ 1]  753 	clrw	x
      0003D2 7B 03            [ 1]  754 	ld	a, (0x03, sp)
      0003D4 97               [ 1]  755 	ld	xl, a
      0003D5 A6 2A            [ 1]  756 	ld	a, #0x2a
      0003D7 D7u00u04         [ 1]  757 	ld	((_displayD + 0), x), a
                                    758 ;	./display.c: 337: break;
      0003DA CCr04rFA         [ 2]  759 	jp	00130$
                                    760 ;	./display.c: 339: case '9':
      0003DD                        761 00116$:
                                    762 ;	./display.c: 340: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      0003DD 5F               [ 1]  763 	clrw	x
      0003DE 7B 03            [ 1]  764 	ld	a, (0x03, sp)
      0003E0 97               [ 1]  765 	ld	xl, a
      0003E1 A6 C6            [ 1]  766 	ld	a, #0xc6
      0003E3 D7u00u01         [ 1]  767 	ld	((_displayAC + 0), x), a
                                    768 ;	./display.c: 341: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT;
      0003E6 5F               [ 1]  769 	clrw	x
      0003E7 7B 03            [ 1]  770 	ld	a, (0x03, sp)
      0003E9 97               [ 1]  771 	ld	xl, a
      0003EA A6 28            [ 1]  772 	ld	a, #0x28
      0003EC D7u00u04         [ 1]  773 	ld	((_displayD + 0), x), a
                                    774 ;	./display.c: 342: break;
      0003EF CCr04rFA         [ 2]  775 	jp	00130$
                                    776 ;	./display.c: 344: case 'A':
      0003F2                        777 00117$:
                                    778 ;	./display.c: 345: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      0003F2 5F               [ 1]  779 	clrw	x
      0003F3 7B 03            [ 1]  780 	ld	a, (0x03, sp)
      0003F5 97               [ 1]  781 	ld	xl, a
      0003F6 A6 C6            [ 1]  782 	ld	a, #0xc6
      0003F8 D7u00u01         [ 1]  783 	ld	((_displayAC + 0), x), a
                                    784 ;	./display.c: 346: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_E_BIT;
      0003FB 5F               [ 1]  785 	clrw	x
      0003FC 7B 03            [ 1]  786 	ld	a, (0x03, sp)
      0003FE 97               [ 1]  787 	ld	xl, a
      0003FF A6 22            [ 1]  788 	ld	a, #0x22
      000401 D7u00u04         [ 1]  789 	ld	((_displayD + 0), x), a
                                    790 ;	./display.c: 347: break;
      000404 CCr04rFA         [ 2]  791 	jp	00130$
                                    792 ;	./display.c: 349: case 'B':
      000407                        793 00118$:
                                    794 ;	./display.c: 350: displayAC[id] = SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      000407 5F               [ 1]  795 	clrw	x
      000408 7B 03            [ 1]  796 	ld	a, (0x03, sp)
      00040A 97               [ 1]  797 	ld	xl, a
      00040B A6 C2            [ 1]  798 	ld	a, #0xc2
      00040D D7u00u01         [ 1]  799 	ld	((_displayAC + 0), x), a
                                    800 ;	./display.c: 351: displayD[id] = SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      000410 5F               [ 1]  801 	clrw	x
      000411 7B 03            [ 1]  802 	ld	a, (0x03, sp)
      000413 97               [ 1]  803 	ld	xl, a
      000414 A6 0A            [ 1]  804 	ld	a, #0x0a
      000416 D7u00u04         [ 1]  805 	ld	((_displayD + 0), x), a
                                    806 ;	./display.c: 352: break;
      000419 CCr04rFA         [ 2]  807 	jp	00130$
                                    808 ;	./display.c: 354: case 'C':
      00041C                        809 00119$:
                                    810 ;	./display.c: 355: displayAC[id] = SSD_SEG_F_BIT;
      00041C 5F               [ 1]  811 	clrw	x
      00041D 7B 03            [ 1]  812 	ld	a, (0x03, sp)
      00041F 97               [ 1]  813 	ld	xl, a
      000420 A6 02            [ 1]  814 	ld	a, #0x02
      000422 D7u00u01         [ 1]  815 	ld	((_displayAC + 0), x), a
                                    816 ;	./display.c: 356: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      000425 5F               [ 1]  817 	clrw	x
      000426 7B 03            [ 1]  818 	ld	a, (0x03, sp)
      000428 97               [ 1]  819 	ld	xl, a
      000429 A6 2A            [ 1]  820 	ld	a, #0x2a
      00042B D7u00u04         [ 1]  821 	ld	((_displayD + 0), x), a
                                    822 ;	./display.c: 357: break;
      00042E CCr04rFA         [ 2]  823 	jp	00130$
                                    824 ;	./display.c: 359: case 'D':
      000431                        825 00120$:
                                    826 ;	./display.c: 360: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_G_BIT;
      000431 5F               [ 1]  827 	clrw	x
      000432 7B 03            [ 1]  828 	ld	a, (0x03, sp)
      000434 97               [ 1]  829 	ld	xl, a
      000435 A6 C4            [ 1]  830 	ld	a, #0xc4
      000437 D7u00u01         [ 1]  831 	ld	((_displayAC + 0), x), a
                                    832 ;	./display.c: 361: displayD[id] = SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      00043A 5F               [ 1]  833 	clrw	x
      00043B 7B 03            [ 1]  834 	ld	a, (0x03, sp)
      00043D 97               [ 1]  835 	ld	xl, a
      00043E A6 0A            [ 1]  836 	ld	a, #0x0a
      000440 D7u00u04         [ 1]  837 	ld	((_displayD + 0), x), a
                                    838 ;	./display.c: 362: break;
      000443 CCr04rFA         [ 2]  839 	jp	00130$
                                    840 ;	./display.c: 364: case 'E':
      000446                        841 00121$:
                                    842 ;	./display.c: 365: displayAC[id] = SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      000446 5F               [ 1]  843 	clrw	x
      000447 7B 03            [ 1]  844 	ld	a, (0x03, sp)
      000449 97               [ 1]  845 	ld	xl, a
      00044A A6 42            [ 1]  846 	ld	a, #0x42
      00044C D7u00u01         [ 1]  847 	ld	((_displayAC + 0), x), a
                                    848 ;	./display.c: 366: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      00044F 5F               [ 1]  849 	clrw	x
      000450 7B 03            [ 1]  850 	ld	a, (0x03, sp)
      000452 97               [ 1]  851 	ld	xl, a
      000453 A6 2A            [ 1]  852 	ld	a, #0x2a
      000455 D7u00u04         [ 1]  853 	ld	((_displayD + 0), x), a
                                    854 ;	./display.c: 367: break;
      000458 CCr04rFA         [ 2]  855 	jp	00130$
                                    856 ;	./display.c: 369: case 'F':
      00045B                        857 00122$:
                                    858 ;	./display.c: 370: displayAC[id] = SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      00045B 5F               [ 1]  859 	clrw	x
      00045C 7B 03            [ 1]  860 	ld	a, (0x03, sp)
      00045E 97               [ 1]  861 	ld	xl, a
      00045F A6 42            [ 1]  862 	ld	a, #0x42
      000461 D7u00u01         [ 1]  863 	ld	((_displayAC + 0), x), a
                                    864 ;	./display.c: 371: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_E_BIT;
      000464 5F               [ 1]  865 	clrw	x
      000465 7B 03            [ 1]  866 	ld	a, (0x03, sp)
      000467 97               [ 1]  867 	ld	xl, a
      000468 A6 22            [ 1]  868 	ld	a, #0x22
      00046A D7u00u04         [ 1]  869 	ld	((_displayD + 0), x), a
                                    870 ;	./display.c: 372: break;
      00046D CCr04rFA         [ 2]  871 	jp	00130$
                                    872 ;	./display.c: 374: case 'H':
      000470                        873 00123$:
                                    874 ;	./display.c: 375: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_C_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      000470 5F               [ 1]  875 	clrw	x
      000471 7B 03            [ 1]  876 	ld	a, (0x03, sp)
      000473 97               [ 1]  877 	ld	xl, a
      000474 A6 C6            [ 1]  878 	ld	a, #0xc6
      000476 D7u00u01         [ 1]  879 	ld	((_displayAC + 0), x), a
                                    880 ;	./display.c: 376: displayD[id] = SSD_SEG_E_BIT;
      000479 5F               [ 1]  881 	clrw	x
      00047A 7B 03            [ 1]  882 	ld	a, (0x03, sp)
      00047C 97               [ 1]  883 	ld	xl, a
      00047D A6 02            [ 1]  884 	ld	a, #0x02
      00047F D7u00u04         [ 1]  885 	ld	((_displayD + 0), x), a
                                    886 ;	./display.c: 377: break;
      000482 CCr04rFA         [ 2]  887 	jp	00130$
                                    888 ;	./display.c: 379: case 'L':
      000485                        889 00124$:
                                    890 ;	./display.c: 380: displayAC[id] = SSD_SEG_F_BIT;
      000485 5F               [ 1]  891 	clrw	x
      000486 7B 03            [ 1]  892 	ld	a, (0x03, sp)
      000488 97               [ 1]  893 	ld	xl, a
      000489 A6 02            [ 1]  894 	ld	a, #0x02
      00048B D7u00u01         [ 1]  895 	ld	((_displayAC + 0), x), a
                                    896 ;	./display.c: 381: displayD[id] = SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      00048E 5F               [ 1]  897 	clrw	x
      00048F 7B 03            [ 1]  898 	ld	a, (0x03, sp)
      000491 97               [ 1]  899 	ld	xl, a
      000492 A6 0A            [ 1]  900 	ld	a, #0x0a
      000494 D7u00u04         [ 1]  901 	ld	((_displayD + 0), x), a
                                    902 ;	./display.c: 382: break;
      000497 20 61            [ 2]  903 	jra	00130$
                                    904 ;	./display.c: 384: case 'N':
      000499                        905 00125$:
                                    906 ;	./display.c: 385: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_F_BIT | SSD_SEG_C_BIT;
      000499 5F               [ 1]  907 	clrw	x
      00049A 7B 03            [ 1]  908 	ld	a, (0x03, sp)
      00049C 97               [ 1]  909 	ld	xl, a
      00049D A6 86            [ 1]  910 	ld	a, #0x86
      00049F D7u00u01         [ 1]  911 	ld	((_displayAC + 0), x), a
                                    912 ;	./display.c: 386: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_E_BIT;
      0004A2 5F               [ 1]  913 	clrw	x
      0004A3 7B 03            [ 1]  914 	ld	a, (0x03, sp)
      0004A5 97               [ 1]  915 	ld	xl, a
      0004A6 A6 22            [ 1]  916 	ld	a, #0x22
      0004A8 D7u00u04         [ 1]  917 	ld	((_displayD + 0), x), a
                                    918 ;	./display.c: 387: break;
      0004AB 20 4D            [ 2]  919 	jra	00130$
                                    920 ;	./display.c: 389: case 'O':
      0004AD                        921 00126$:
                                    922 ;	./display.c: 390: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_F_BIT | SSD_SEG_C_BIT;
      0004AD 5F               [ 1]  923 	clrw	x
      0004AE 7B 03            [ 1]  924 	ld	a, (0x03, sp)
      0004B0 97               [ 1]  925 	ld	xl, a
      0004B1 A6 86            [ 1]  926 	ld	a, #0x86
      0004B3 D7u00u01         [ 1]  927 	ld	((_displayAC + 0), x), a
                                    928 ;	./display.c: 391: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_D_BIT | SSD_SEG_E_BIT;
      0004B6 5F               [ 1]  929 	clrw	x
      0004B7 7B 03            [ 1]  930 	ld	a, (0x03, sp)
      0004B9 97               [ 1]  931 	ld	xl, a
      0004BA A6 2A            [ 1]  932 	ld	a, #0x2a
      0004BC D7u00u04         [ 1]  933 	ld	((_displayD + 0), x), a
                                    934 ;	./display.c: 392: break;
      0004BF 20 39            [ 2]  935 	jra	00130$
                                    936 ;	./display.c: 394: case 'P':
      0004C1                        937 00127$:
                                    938 ;	./display.c: 395: displayAC[id] = SSD_SEG_B_BIT | SSD_SEG_F_BIT | SSD_SEG_G_BIT;
      0004C1 5F               [ 1]  939 	clrw	x
      0004C2 7B 03            [ 1]  940 	ld	a, (0x03, sp)
      0004C4 97               [ 1]  941 	ld	xl, a
      0004C5 A6 46            [ 1]  942 	ld	a, #0x46
      0004C7 D7u00u01         [ 1]  943 	ld	((_displayAC + 0), x), a
                                    944 ;	./display.c: 396: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_E_BIT;
      0004CA 5F               [ 1]  945 	clrw	x
      0004CB 7B 03            [ 1]  946 	ld	a, (0x03, sp)
      0004CD 97               [ 1]  947 	ld	xl, a
      0004CE A6 22            [ 1]  948 	ld	a, #0x22
      0004D0 D7u00u04         [ 1]  949 	ld	((_displayD + 0), x), a
                                    950 ;	./display.c: 397: break;
      0004D3 20 25            [ 2]  951 	jra	00130$
                                    952 ;	./display.c: 399: case 'R':
      0004D5                        953 00128$:
                                    954 ;	./display.c: 400: displayAC[id] = SSD_SEG_F_BIT;
      0004D5 5F               [ 1]  955 	clrw	x
      0004D6 7B 03            [ 1]  956 	ld	a, (0x03, sp)
      0004D8 97               [ 1]  957 	ld	xl, a
      0004D9 A6 02            [ 1]  958 	ld	a, #0x02
      0004DB D7u00u01         [ 1]  959 	ld	((_displayAC + 0), x), a
                                    960 ;	./display.c: 401: displayD[id] = SSD_SEG_A_BIT | SSD_SEG_E_BIT;
      0004DE 5F               [ 1]  961 	clrw	x
      0004DF 7B 03            [ 1]  962 	ld	a, (0x03, sp)
      0004E1 97               [ 1]  963 	ld	xl, a
      0004E2 A6 22            [ 1]  964 	ld	a, #0x22
      0004E4 D7u00u04         [ 1]  965 	ld	((_displayD + 0), x), a
                                    966 ;	./display.c: 402: break;
      0004E7 20 11            [ 2]  967 	jra	00130$
                                    968 ;	./display.c: 404: default:
      0004E9                        969 00129$:
                                    970 ;	./display.c: 405: displayAC[id] = 0;
      0004E9 5F               [ 1]  971 	clrw	x
      0004EA 7B 03            [ 1]  972 	ld	a, (0x03, sp)
      0004EC 97               [ 1]  973 	ld	xl, a
      0004ED 72 4Fu00u01      [ 1]  974 	clr	((_displayAC + 0), x)
                                    975 ;	./display.c: 406: displayD[id] = SSD_SEG_D_BIT;
      0004F1 5F               [ 1]  976 	clrw	x
      0004F2 7B 03            [ 1]  977 	ld	a, (0x03, sp)
      0004F4 97               [ 1]  978 	ld	xl, a
      0004F5 A6 08            [ 1]  979 	ld	a, #0x08
      0004F7 D7u00u04         [ 1]  980 	ld	((_displayD + 0), x), a
                                    981 ;	./display.c: 407: }
      0004FA                        982 00130$:
                                    983 ;	./display.c: 409: if (dot) {
      0004FA 0D 05            [ 1]  984 	tnz	(0x05, sp)
      0004FC 27 0C            [ 1]  985 	jreq	00132$
                                    986 ;	./display.c: 410: displayD[id] |= SSD_SEG_P_BIT;
      0004FE 5F               [ 1]  987 	clrw	x
      0004FF 7B 03            [ 1]  988 	ld	a, (0x03, sp)
      000501 97               [ 1]  989 	ld	xl, a
      000502 1Cr00r04         [ 2]  990 	addw	x, #(_displayD + 0)
      000505 F6               [ 1]  991 	ld	a, (x)
      000506 AA 04            [ 1]  992 	or	a, #0x04
      000508 F7               [ 1]  993 	ld	(x), a
      000509 81               [ 4]  994 	ret
      00050A                        995 00132$:
                                    996 ;	./display.c: 412: displayD[id] &= ~SSD_SEG_P_BIT;
      00050A 5F               [ 1]  997 	clrw	x
      00050B 7B 03            [ 1]  998 	ld	a, (0x03, sp)
      00050D 97               [ 1]  999 	ld	xl, a
      00050E 1Cr00r04         [ 2] 1000 	addw	x, #(_displayD + 0)
      000511 F6               [ 1] 1001 	ld	a, (x)
      000512 A4 FB            [ 1] 1002 	and	a, #0xfb
      000514 F7               [ 1] 1003 	ld	(x), a
                                   1004 ;	./display.c: 415: return;
                                   1005 ;	./display.c: 416: }
      000515 81               [ 4] 1006 	ret
                                   1007 	.area CODE
                                   1008 	.area CONST
      000000                       1009 _Hex2CharMap:
      000000 30                    1010 	.db #0x30	; 48	'0'
      000001 31                    1011 	.db #0x31	; 49	'1'
      000002 32                    1012 	.db #0x32	; 50	'2'
      000003 33                    1013 	.db #0x33	; 51	'3'
      000004 34                    1014 	.db #0x34	; 52	'4'
      000005 35                    1015 	.db #0x35	; 53	'5'
      000006 36                    1016 	.db #0x36	; 54	'6'
      000007 37                    1017 	.db #0x37	; 55	'7'
      000008 38                    1018 	.db #0x38	; 56	'8'
      000009 39                    1019 	.db #0x39	; 57	'9'
      00000A 41                    1020 	.db #0x41	; 65	'A'
      00000B 42                    1021 	.db #0x42	; 66	'B'
      00000C 43                    1022 	.db #0x43	; 67	'C'
      00000D 44                    1023 	.db #0x44	; 68	'D'
      00000E 45                    1024 	.db #0x45	; 69	'E'
      00000F 46                    1025 	.db #0x46	; 70	'F'
                                   1026 	.area CONST
      000010                       1027 ___str_0:
      000010 00                    1028 	.db 0x00
                                   1029 	.area CODE
                                   1030 	.area CONST
      000011                       1031 ___str_1:
      000011 38 38 38              1032 	.ascii "888"
      000014 00                    1033 	.db 0x00
                                   1034 	.area CODE
                                   1035 	.area INITIALIZER
                                   1036 	.area CABS (ABS)
