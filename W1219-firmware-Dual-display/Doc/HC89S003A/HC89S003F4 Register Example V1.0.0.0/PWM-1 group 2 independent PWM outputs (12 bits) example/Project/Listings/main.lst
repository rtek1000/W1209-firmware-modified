C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:44:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\SoftWare\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //PWM-1 group 2 independent PWM outputs (12 bits) 
   2          
   3          #define ALLOCATE_EXTERN
   4          #include "HC89S003F4.h"
   5          
   6          /***************************************************************************************
   7            * @Function   P22, P11 output frequency is 1.955KHz, duty cycle is 33.3% square wave
   8          ***************************************************************************************/
   9          void main()
  10          {
  11   1      /************************************System initialization ****************************************/
  12   1              WDTCCR = 0x00;                                          //Close watchdog
  13   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  14   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  15   1              
  16   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  17   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz 
  18   1      /************************************PWM3 initialization****************************************/
  19   1              P2M1 = P2M1&0xF0|0x08;                  //Set P22 as push-pull output
  20   1          P1M0 = P1M0&0xF0|0x08;              //Set P01 as push-pull output
  21   1              
  22   1              PWM0_MAP = 0x22;                                        //PWM0 channel mapping P22 port
  23   1              PWM01_MAP = 0x10;                                       //PWM01 channel mapping P10 port
  24   1          PWM0C = 0x01;                                               //Both PWM0 and PWM01 are active high, and the clock is divided by 8
  25   1      
  26   1              //In independent mode, PWM0 and PWM01 share a period register
  27   1              //PWM0 duty cycle adjustment                    Duty Cycle Register of PWM0 Group
  28   1              //PWM01 duty cycle adjustment                   Dead zone register of PWM0 group
  29   1      
  30   1              //Period calculation = 0x03ff / (Fosc / PWM frequency division factor)
  31   1              //                      = 0x03ff / (16000000 / 8)                       
  32   1              //                      = 1023   /2000000
  33   1              //                      = 511.5us                 £¨1.955kHz£©
  34   1      
  35   1              PWM0PH = 0x03;                                          //The upper 4 bits of the period are set to 0x03
  36   1              PWM0PL = 0xFF;                                          //The lower 8 bits of the period are set to 0xFF
  37   1      
  38   1              //Duty cycle calculation = 0x0155 / (Fosc / PWM frequency division factor)
  39   1              //                      = 0x0155 / (16000000 / 8)                       
  40   1              //                      = 341    / 2000000
  41   1              //                      = 170.5us                  Duty cycle£º 170.5/511.5 = 33.3%
  42   1      
  43   1              PWM0DH = 0x01;                                          //PWM0 high 4-bit duty cycle 0x01
  44   1              PWM0DL = 0x55;                                          //PWM0 low 8-bit duty cycle 0x55
  45   1              PWM0DTH = 0x01;                                         //PWM01 high 4-bit duty cycle 0x01
  46   1              PWM0DTL = 0x55;                                         //PWM01 low 8-bit duty cycle 0x55
  47   1              PWM0EN = 0x0F;                                          //Enable PWM0, work in independent mode
  48   1              
  49   1              while(1);
  50   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:44:40 PAGE 2   

   CODE SIZE        =     67    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
