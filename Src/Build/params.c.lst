                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module params
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _paramDefault
                                     12 	.globl _paramMax
                                     13 	.globl _paramMin
                                     14 	.globl _setMenuDisplay
                                     15 	.globl _getButton3
                                     16 	.globl _getButton2
                                     17 	.globl _initParamsEEPROM
                                     18 	.globl _getParamById
                                     19 	.globl _setParamById
                                     20 	.globl _getParam
                                     21 	.globl _setParam
                                     22 	.globl _incParam
                                     23 	.globl _decParam
                                     24 	.globl _getParamId
                                     25 	.globl _setParamId
                                     26 	.globl _incParamId
                                     27 	.globl _decParamId
                                     28 	.globl _paramToString
                                     29 	.globl _storeParams
                                     30 	.globl _itofpa
                                     31 ;--------------------------------------------------------
                                     32 ; ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DATA
      000000                         35 _paramId:
      000000                         36 	.ds 1
      000001                         37 _paramCache:
      000001                         38 	.ds 20
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area INITIALIZED
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area DABS (ABS)
                                     47 
                                     48 ; default segment ordering for linker
                                     49 	.area HOME
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area CONST
                                     53 	.area INITIALIZER
                                     54 	.area CODE
                                     55 
                                     56 ;--------------------------------------------------------
                                     57 ; global & static initialisations
                                     58 ;--------------------------------------------------------
                                     59 	.area HOME
                                     60 	.area GSINIT
                                     61 	.area GSFINAL
                                     62 	.area GSINIT
                                     63 ;--------------------------------------------------------
                                     64 ; Home
                                     65 ;--------------------------------------------------------
                                     66 	.area HOME
                                     67 	.area HOME
                                     68 ;--------------------------------------------------------
                                     69 ; code
                                     70 ;--------------------------------------------------------
                                     71 	.area CODE
                                     72 ;	./params.c: 62: void initParamsEEPROM()
                                     73 ;	-----------------------------------------
                                     74 ;	 function initParamsEEPROM
                                     75 ;	-----------------------------------------
      000000                         76 _initParamsEEPROM:
                                     77 ;	./params.c: 64: if (getButton2() && getButton3() ) {
      000000 CDr00r00         [ 4]   78 	call	_getButton2
      000003 4D               [ 1]   79 	tnz	a
      000004 27 18            [ 1]   80 	jreq	00104$
      000006 CDr00r00         [ 4]   81 	call	_getButton3
      000009 4D               [ 1]   82 	tnz	a
      00000A 27 12            [ 1]   83 	jreq	00104$
                                     84 ;	./params.c: 65: if (getParamById (PARAM_LOCK_BUTTONS)) {
      00000C 4B 07            [ 1]   85 	push	#0x07
      00000E CDr00r7B         [ 4]   86 	call	_getParamById
      000011 84               [ 1]   87 	pop	a
      000012 5D               [ 2]   88 	tnzw	x
      000013 27 09            [ 1]   89 	jreq	00104$
                                     90 ;	./params.c: 66: resetParamsEEPROM();
      000015 CDr00r35         [ 4]   91 	call	_resetParamsEEPROM
                                     92 ;	./params.c: 67: setMenuDisplay(MENU_EEPROM_RESET);
      000018 4B 07            [ 1]   93 	push	#0x07
      00001A CDr00r00         [ 4]   94 	call	_setMenuDisplay
      00001D 84               [ 1]   95 	pop	a
      00001E                         96 00104$:
                                     97 ;	./params.c: 71: loadParamsEEPROM();
      00001E CDr00r59         [ 4]   98 	call	_loadParamsEEPROM
                                     99 ;	./params.c: 73: if (getParamById (PARAM_LOCK_BUTTONS)) {
      000021 4B 07            [ 1]  100 	push	#0x07
      000023 CDr00r7B         [ 4]  101 	call	_getParamById
      000026 84               [ 1]  102 	pop	a
      000027 5D               [ 2]  103 	tnzw	x
      000028 27 06            [ 1]  104 	jreq	00107$
                                    105 ;	./params.c: 74: setMenuDisplay(MENU_EEPROM_LOCKED);
      00002A 4B 08            [ 1]  106 	push	#0x08
      00002C CDr00r00         [ 4]  107 	call	_setMenuDisplay
      00002F 84               [ 1]  108 	pop	a
      000030                        109 00107$:
                                    110 ;	./params.c: 77: paramId = 0;
      000030 72 5Fu00u00      [ 1]  111 	clr	_paramId+0
                                    112 ;	./params.c: 78: }
      000034 81               [ 4]  113 	ret
                                    114 ;	./params.c: 80: static void resetParamsEEPROM()
                                    115 ;	-----------------------------------------
                                    116 ;	 function resetParamsEEPROM
                                    117 ;	-----------------------------------------
      000035                        118 _resetParamsEEPROM:
                                    119 ;	./params.c: 83: for (paramId = 0; paramId < paramLen; paramId++) {
      000035 72 5Fu00u00      [ 1]  120 	clr	_paramId+0
      000039                        121 00102$:
                                    122 ;	./params.c: 84: paramCache[paramId] = paramDefault[paramId];
      000039 C6u00u00         [ 1]  123 	ld	a, _paramId+0
      00003C 5F               [ 1]  124 	clrw	x
      00003D 97               [ 1]  125 	ld	xl, a
      00003E 58               [ 2]  126 	sllw	x
      00003F 90 93            [ 1]  127 	ldw	y, x
      000041 72 A9r00r01      [ 2]  128 	addw	y, #(_paramCache + 0)
      000045 1Cr00r28         [ 2]  129 	addw	x, #(_paramDefault + 0)
      000048 FE               [ 2]  130 	ldw	x, (x)
      000049 90 FF            [ 2]  131 	ldw	(y), x
                                    132 ;	./params.c: 83: for (paramId = 0; paramId < paramLen; paramId++) {
      00004B 72 5Cu00u00      [ 1]  133 	inc	_paramId+0
      00004F C6u00u00         [ 1]  134 	ld	a, _paramId+0
      000052 A1 0A            [ 1]  135 	cp	a, #0x0a
      000054 25 E3            [ 1]  136 	jrc	00102$
                                    137 ;	./params.c: 87: storeParams();
                                    138 ;	./params.c: 88: }
      000056 CCr02rD6         [ 2]  139 	jp	_storeParams
                                    140 ;	./params.c: 90: static void loadParamsEEPROM()
                                    141 ;	-----------------------------------------
                                    142 ;	 function loadParamsEEPROM
                                    143 ;	-----------------------------------------
      000059                        144 _loadParamsEEPROM:
                                    145 ;	./params.c: 93: for (paramId = 0; paramId < paramLen; paramId++) {
      000059 72 5Fu00u00      [ 1]  146 	clr	_paramId+0
      00005D                        147 00102$:
                                    148 ;	./params.c: 94: paramCache[paramId] = * (int*) (EEPROM_BASE_ADDR + EEPROM_PARAMS_OFFSET
      00005D C6u00u00         [ 1]  149 	ld	a, _paramId+0
      000060 5F               [ 1]  150 	clrw	x
      000061 97               [ 1]  151 	ld	xl, a
      000062 58               [ 2]  152 	sllw	x
      000063 90 93            [ 1]  153 	ldw	y, x
      000065 72 A9r00r01      [ 2]  154 	addw	y, #(_paramCache + 0)
                                    155 ;	./params.c: 95: + (paramId * sizeof paramCache[0]) );
      000069 1C 40 64         [ 2]  156 	addw	x, #0x4064
      00006C FE               [ 2]  157 	ldw	x, (x)
      00006D 90 FF            [ 2]  158 	ldw	(y), x
                                    159 ;	./params.c: 93: for (paramId = 0; paramId < paramLen; paramId++) {
      00006F 72 5Cu00u00      [ 1]  160 	inc	_paramId+0
      000073 C6u00u00         [ 1]  161 	ld	a, _paramId+0
      000076 A1 0A            [ 1]  162 	cp	a, #0x0a
      000078 25 E3            [ 1]  163 	jrc	00102$
                                    164 ;	./params.c: 97: }
      00007A 81               [ 4]  165 	ret
                                    166 ;	./params.c: 104: int getParamById (unsigned char id)
                                    167 ;	-----------------------------------------
                                    168 ;	 function getParamById
                                    169 ;	-----------------------------------------
      00007B                        170 _getParamById:
                                    171 ;	./params.c: 106: if (id < paramLen) {
      00007B 7B 03            [ 1]  172 	ld	a, (0x03, sp)
      00007D A1 0A            [ 1]  173 	cp	a, #0x0a
      00007F 24 0A            [ 1]  174 	jrnc	00102$
                                    175 ;	./params.c: 107: return paramCache[id];
      000081 7B 03            [ 1]  176 	ld	a, (0x03, sp)
      000083 5F               [ 1]  177 	clrw	x
      000084 97               [ 1]  178 	ld	xl, a
      000085 58               [ 2]  179 	sllw	x
      000086 1Cr00r01         [ 2]  180 	addw	x, #(_paramCache + 0)
      000089 FE               [ 2]  181 	ldw	x, (x)
      00008A 81               [ 4]  182 	ret
      00008B                        183 00102$:
                                    184 ;	./params.c: 110: return -1;
      00008B 5F               [ 1]  185 	clrw	x
      00008C 5A               [ 2]  186 	decw	x
                                    187 ;	./params.c: 111: }
      00008D 81               [ 4]  188 	ret
                                    189 ;	./params.c: 118: void setParamById (unsigned char id, int val)
                                    190 ;	-----------------------------------------
                                    191 ;	 function setParamById
                                    192 ;	-----------------------------------------
      00008E                        193 _setParamById:
                                    194 ;	./params.c: 120: if (id < paramLen) {
      00008E 7B 03            [ 1]  195 	ld	a, (0x03, sp)
      000090 A1 0A            [ 1]  196 	cp	a, #0x0a
      000092 25 01            [ 1]  197 	jrc	00110$
      000094 81               [ 4]  198 	ret
      000095                        199 00110$:
                                    200 ;	./params.c: 121: paramCache[id] = val;
      000095 7B 03            [ 1]  201 	ld	a, (0x03, sp)
      000097 5F               [ 1]  202 	clrw	x
      000098 97               [ 1]  203 	ld	xl, a
      000099 58               [ 2]  204 	sllw	x
      00009A 16 04            [ 2]  205 	ldw	y, (0x04, sp)
      00009C DFu00u01         [ 2]  206 	ldw	((_paramCache + 0), x), y
                                    207 ;	./params.c: 123: }
      00009F 81               [ 4]  208 	ret
                                    209 ;	./params.c: 129: int getParam()
                                    210 ;	-----------------------------------------
                                    211 ;	 function getParam
                                    212 ;	-----------------------------------------
      0000A0                        213 _getParam:
                                    214 ;	./params.c: 131: return paramCache[paramId];
      0000A0 C6u00u00         [ 1]  215 	ld	a, _paramId+0
      0000A3 5F               [ 1]  216 	clrw	x
      0000A4 97               [ 1]  217 	ld	xl, a
      0000A5 58               [ 2]  218 	sllw	x
      0000A6 1Cr00r01         [ 2]  219 	addw	x, #(_paramCache + 0)
      0000A9 FE               [ 2]  220 	ldw	x, (x)
                                    221 ;	./params.c: 132: }
      0000AA 81               [ 4]  222 	ret
                                    223 ;	./params.c: 138: void setParam (int val)
                                    224 ;	-----------------------------------------
                                    225 ;	 function setParam
                                    226 ;	-----------------------------------------
      0000AB                        227 _setParam:
                                    228 ;	./params.c: 140: paramCache[paramId] = val;
      0000AB C6u00u00         [ 1]  229 	ld	a, _paramId+0
      0000AE 5F               [ 1]  230 	clrw	x
      0000AF 97               [ 1]  231 	ld	xl, a
      0000B0 58               [ 2]  232 	sllw	x
      0000B1 16 03            [ 2]  233 	ldw	y, (0x03, sp)
      0000B3 DFu00u01         [ 2]  234 	ldw	((_paramCache + 0), x), y
                                    235 ;	./params.c: 141: }
      0000B6 81               [ 4]  236 	ret
                                    237 ;	./params.c: 146: void incParam()
                                    238 ;	-----------------------------------------
                                    239 ;	 function incParam
                                    240 ;	-----------------------------------------
      0000B7                        241 _incParam:
      0000B7 52 04            [ 2]  242 	sub	sp, #4
                                    243 ;	./params.c: 151: paramCache[paramId] = ~paramCache[paramId] & 0x0001;
      0000B9 5F               [ 1]  244 	clrw	x
      0000BA C6u00u00         [ 1]  245 	ld	a, _paramId+0
      0000BD 97               [ 1]  246 	ld	xl, a
      0000BE 58               [ 2]  247 	sllw	x
      0000BF 51               [ 1]  248 	exgw	x, y
                                    249 ;	./params.c: 149: if (paramId == PARAM_OVERHEAT_INDICATION ||
      0000C0 C6u00u00         [ 1]  250 	ld	a, _paramId+0
      0000C3 A1 06            [ 1]  251 	cp	a, #0x06
      0000C5 27 0E            [ 1]  252 	jreq	00103$
                                    253 ;	./params.c: 150: paramId == PARAM_LOCK_BUTTONS || paramId == PARAM_AUTO_BRIGHT) {
      0000C7 C6u00u00         [ 1]  254 	ld	a, _paramId+0
      0000CA A1 07            [ 1]  255 	cp	a, #0x07
      0000CC 27 07            [ 1]  256 	jreq	00103$
      0000CE C6u00u00         [ 1]  257 	ld	a, _paramId+0
      0000D1 A1 08            [ 1]  258 	cp	a, #0x08
      0000D3 26 11            [ 1]  259 	jrne	00104$
      0000D5                        260 00103$:
                                    261 ;	./params.c: 151: paramCache[paramId] = ~paramCache[paramId] & 0x0001;
      0000D5 72 A9r00r01      [ 2]  262 	addw	y, #(_paramCache + 0)
      0000D9 93               [ 1]  263 	ldw	x, y
      0000DA FE               [ 2]  264 	ldw	x, (x)
      0000DB 53               [ 2]  265 	cplw	x
      0000DC 9F               [ 1]  266 	ld	a, xl
      0000DD A4 01            [ 1]  267 	and	a, #0x01
      0000DF 97               [ 1]  268 	ld	xl, a
      0000E0 4F               [ 1]  269 	clr	a
      0000E1 95               [ 1]  270 	ld	xh, a
      0000E2 90 FF            [ 2]  271 	ldw	(y), x
      0000E4 20 18            [ 2]  272 	jra	00108$
      0000E6                        273 00104$:
                                    274 ;	./params.c: 152: } else if (paramCache[paramId] < paramMax[paramId]) {
      0000E6 93               [ 1]  275 	ldw	x, y
      0000E7 1Cr00r01         [ 2]  276 	addw	x, #(_paramCache + 0)
      0000EA 1F 01            [ 2]  277 	ldw	(0x01, sp), x
      0000EC FE               [ 2]  278 	ldw	x, (x)
      0000ED 72 A9r00r14      [ 2]  279 	addw	y, #(_paramMax + 0)
      0000F1 90 FE            [ 2]  280 	ldw	y, (y)
      0000F3 17 03            [ 2]  281 	ldw	(0x03, sp), y
      0000F5 13 03            [ 2]  282 	cpw	x, (0x03, sp)
      0000F7 2E 05            [ 1]  283 	jrsge	00108$
                                    284 ;	./params.c: 153: paramCache[paramId]++;
      0000F9 5C               [ 1]  285 	incw	x
      0000FA 16 01            [ 2]  286 	ldw	y, (0x01, sp)
      0000FC 90 FF            [ 2]  287 	ldw	(y), x
      0000FE                        288 00108$:
                                    289 ;	./params.c: 155: }
      0000FE 5B 04            [ 2]  290 	addw	sp, #4
      000100 81               [ 4]  291 	ret
                                    292 ;	./params.c: 160: void decParam()
                                    293 ;	-----------------------------------------
                                    294 ;	 function decParam
                                    295 ;	-----------------------------------------
      000101                        296 _decParam:
      000101 52 04            [ 2]  297 	sub	sp, #4
                                    298 ;	./params.c: 165: paramCache[paramId] = ~paramCache[paramId] & 0x0001;
      000103 5F               [ 1]  299 	clrw	x
      000104 C6u00u00         [ 1]  300 	ld	a, _paramId+0
      000107 97               [ 1]  301 	ld	xl, a
      000108 58               [ 2]  302 	sllw	x
      000109 51               [ 1]  303 	exgw	x, y
                                    304 ;	./params.c: 163: if (paramId == PARAM_OVERHEAT_INDICATION ||
      00010A C6u00u00         [ 1]  305 	ld	a, _paramId+0
      00010D A1 06            [ 1]  306 	cp	a, #0x06
      00010F 27 0E            [ 1]  307 	jreq	00103$
                                    308 ;	./params.c: 164: paramId == PARAM_LOCK_BUTTONS || paramId == PARAM_AUTO_BRIGHT) {
      000111 C6u00u00         [ 1]  309 	ld	a, _paramId+0
      000114 A1 07            [ 1]  310 	cp	a, #0x07
      000116 27 07            [ 1]  311 	jreq	00103$
      000118 C6u00u00         [ 1]  312 	ld	a, _paramId+0
      00011B A1 08            [ 1]  313 	cp	a, #0x08
      00011D 26 11            [ 1]  314 	jrne	00104$
      00011F                        315 00103$:
                                    316 ;	./params.c: 165: paramCache[paramId] = ~paramCache[paramId] & 0x0001;
      00011F 72 A9r00r01      [ 2]  317 	addw	y, #(_paramCache + 0)
      000123 93               [ 1]  318 	ldw	x, y
      000124 FE               [ 2]  319 	ldw	x, (x)
      000125 53               [ 2]  320 	cplw	x
      000126 9F               [ 1]  321 	ld	a, xl
      000127 A4 01            [ 1]  322 	and	a, #0x01
      000129 97               [ 1]  323 	ld	xl, a
      00012A 4F               [ 1]  324 	clr	a
      00012B 95               [ 1]  325 	ld	xh, a
      00012C 90 FF            [ 2]  326 	ldw	(y), x
      00012E 20 18            [ 2]  327 	jra	00108$
      000130                        328 00104$:
                                    329 ;	./params.c: 166: } else if (paramCache[paramId] > paramMin[paramId]) {
      000130 93               [ 1]  330 	ldw	x, y
      000131 1Cr00r01         [ 2]  331 	addw	x, #(_paramCache + 0)
      000134 1F 01            [ 2]  332 	ldw	(0x01, sp), x
      000136 FE               [ 2]  333 	ldw	x, (x)
      000137 72 A9r00r00      [ 2]  334 	addw	y, #(_paramMin + 0)
      00013B 90 FE            [ 2]  335 	ldw	y, (y)
      00013D 17 03            [ 2]  336 	ldw	(0x03, sp), y
      00013F 13 03            [ 2]  337 	cpw	x, (0x03, sp)
      000141 2D 05            [ 1]  338 	jrsle	00108$
                                    339 ;	./params.c: 167: paramCache[paramId]--;
      000143 5A               [ 2]  340 	decw	x
      000144 16 01            [ 2]  341 	ldw	y, (0x01, sp)
      000146 90 FF            [ 2]  342 	ldw	(y), x
      000148                        343 00108$:
                                    344 ;	./params.c: 169: }
      000148 5B 04            [ 2]  345 	addw	sp, #4
      00014A 81               [ 4]  346 	ret
                                    347 ;	./params.c: 175: unsigned char getParamId()
                                    348 ;	-----------------------------------------
                                    349 ;	 function getParamId
                                    350 ;	-----------------------------------------
      00014B                        351 _getParamId:
                                    352 ;	./params.c: 177: return paramId;
      00014B C6u00u00         [ 1]  353 	ld	a, _paramId+0
                                    354 ;	./params.c: 178: }
      00014E 81               [ 4]  355 	ret
                                    356 ;	./params.c: 184: void setParamId (unsigned char val)
                                    357 ;	-----------------------------------------
                                    358 ;	 function setParamId
                                    359 ;	-----------------------------------------
      00014F                        360 _setParamId:
                                    361 ;	./params.c: 186: if (val < paramLen) {
      00014F 7B 03            [ 1]  362 	ld	a, (0x03, sp)
      000151 A1 0A            [ 1]  363 	cp	a, #0x0a
      000153 25 01            [ 1]  364 	jrc	00110$
      000155 81               [ 4]  365 	ret
      000156                        366 00110$:
                                    367 ;	./params.c: 187: paramId = val;
      000156 7B 03            [ 1]  368 	ld	a, (0x03, sp)
      000158 C7u00u00         [ 1]  369 	ld	_paramId+0, a
                                    370 ;	./params.c: 189: }
      00015B 81               [ 4]  371 	ret
                                    372 ;	./params.c: 194: void incParamId()
                                    373 ;	-----------------------------------------
                                    374 ;	 function incParamId
                                    375 ;	-----------------------------------------
      00015C                        376 _incParamId:
                                    377 ;	./params.c: 196: if (paramId < paramIdMax) {
      00015C C6u00u00         [ 1]  378 	ld	a, _paramId+0
      00015F A1 08            [ 1]  379 	cp	a, #0x08
      000161 24 05            [ 1]  380 	jrnc	00102$
                                    381 ;	./params.c: 197: paramId++;
      000163 72 5Cu00u00      [ 1]  382 	inc	_paramId+0
      000167 81               [ 4]  383 	ret
      000168                        384 00102$:
                                    385 ;	./params.c: 199: paramId = 0;
      000168 72 5Fu00u00      [ 1]  386 	clr	_paramId+0
                                    387 ;	./params.c: 201: }
      00016C 81               [ 4]  388 	ret
                                    389 ;	./params.c: 206: void decParamId()
                                    390 ;	-----------------------------------------
                                    391 ;	 function decParamId
                                    392 ;	-----------------------------------------
      00016D                        393 _decParamId:
                                    394 ;	./params.c: 208: if (paramId > 0) {
      00016D 72 5Du00u00      [ 1]  395 	tnz	_paramId+0
      000171 27 05            [ 1]  396 	jreq	00102$
                                    397 ;	./params.c: 209: paramId--;
      000173 72 5Au00u00      [ 1]  398 	dec	_paramId+0
      000177 81               [ 4]  399 	ret
      000178                        400 00102$:
                                    401 ;	./params.c: 211: paramId = paramIdMax;
      000178 35 08u00u00      [ 1]  402 	mov	_paramId+0, #0x08
                                    403 ;	./params.c: 213: }
      00017C 81               [ 4]  404 	ret
                                    405 ;	./params.c: 222: void paramToString (unsigned char id, unsigned char* strBuff)
                                    406 ;	-----------------------------------------
                                    407 ;	 function paramToString
                                    408 ;	-----------------------------------------
      00017D                        409 _paramToString:
      00017D 52 04            [ 2]  410 	sub	sp, #4
                                    411 ;	./params.c: 224: switch (id) {
      00017F 7B 07            [ 1]  412 	ld	a, (0x07, sp)
      000181 A1 09            [ 1]  413 	cp	a, #0x09
      000183 23 03            [ 2]  414 	jrule	00159$
      000185 CCr02rBF         [ 2]  415 	jp	00125$
      000188                        416 00159$:
      000188 5F               [ 1]  417 	clrw	x
      000189 7B 07            [ 1]  418 	ld	a, (0x07, sp)
      00018B 97               [ 1]  419 	ld	xl, a
      00018C 58               [ 2]  420 	sllw	x
      00018D DEu01u91         [ 2]  421 	ldw	x, (#00160$, x)
      000190 FC               [ 2]  422 	jp	(x)
      000191                        423 00160$:
      000191r01rA5                  424 	.dw	#00101$
      000193r01rFB                  425 	.dw	#00113$
      000195r02r13                  426 	.dw	#00114$
      000197r02r2B                  427 	.dw	#00115$
      000199r02r43                  428 	.dw	#00116$
      00019Br02r5A                  429 	.dw	#00117$
      00019Dr02r71                  430 	.dw	#00120$
      00019Fr02r71                  431 	.dw	#00120$
      0001A1r02r71                  432 	.dw	#00120$
      0001A3r02rA8                  433 	.dw	#00124$
                                    434 ;	./params.c: 225: case PARAM_RELAY_MODE:
      0001A5                        435 00101$:
                                    436 ;	./params.c: 226: ( (unsigned char*) strBuff) [1] = 0;
      0001A5 16 08            [ 2]  437 	ldw	y, (0x08, sp)
      0001A7 90 5C            [ 1]  438 	incw	y
      0001A9 90 7F            [ 1]  439 	clr	(y)
                                    440 ;	./params.c: 227: if (paramCache[id] == 1) {
      0001AB 7B 07            [ 1]  441 	ld	a, (0x07, sp)
      0001AD 5F               [ 1]  442 	clrw	x
      0001AE 97               [ 1]  443 	ld	xl, a
      0001AF 58               [ 2]  444 	sllw	x
      0001B0 1Cr00r01         [ 2]  445 	addw	x, #(_paramCache + 0)
      0001B3 FE               [ 2]  446 	ldw	x, (x)
      0001B4 A3 00 01         [ 2]  447 	cpw	x, #0x0001
      0001B7 26 08            [ 1]  448 	jrne	00111$
                                    449 ;	./params.c: 228: ( (unsigned char*) strBuff) [0] = 'H';
      0001B9 1E 08            [ 2]  450 	ldw	x, (0x08, sp)
      0001BB A6 48            [ 1]  451 	ld	a, #0x48
      0001BD F7               [ 1]  452 	ld	(x), a
      0001BE CCr02rD3         [ 2]  453 	jp	00127$
      0001C1                        454 00111$:
                                    455 ;	./params.c: 229: } else if (paramCache[id] == 0) {
      0001C1 5D               [ 2]  456 	tnzw	x
      0001C2 26 08            [ 1]  457 	jrne	00108$
                                    458 ;	./params.c: 230: ( (unsigned char*) strBuff) [0] = 'C';
      0001C4 1E 08            [ 2]  459 	ldw	x, (0x08, sp)
      0001C6 A6 43            [ 1]  460 	ld	a, #0x43
      0001C8 F7               [ 1]  461 	ld	(x), a
      0001C9 CCr02rD3         [ 2]  462 	jp	00127$
      0001CC                        463 00108$:
                                    464 ;	./params.c: 231: } else if (paramCache[id] == 2) {
      0001CC A3 00 02         [ 2]  465 	cpw	x, #0x0002
      0001CF 26 11            [ 1]  466 	jrne	00105$
                                    467 ;	./params.c: 232: ( (unsigned char*) strBuff) [2] = 0;
      0001D1 1E 08            [ 2]  468 	ldw	x, (0x08, sp)
      0001D3 5C               [ 1]  469 	incw	x
      0001D4 5C               [ 1]  470 	incw	x
      0001D5 7F               [ 1]  471 	clr	(x)
                                    472 ;	./params.c: 233: ( (unsigned char*) strBuff) [1] = '1';
      0001D6 A6 31            [ 1]  473 	ld	a, #0x31
      0001D8 90 F7            [ 1]  474 	ld	(y), a
                                    475 ;	./params.c: 234: ( (unsigned char*) strBuff) [0] = 'A';
      0001DA 1E 08            [ 2]  476 	ldw	x, (0x08, sp)
      0001DC A6 41            [ 1]  477 	ld	a, #0x41
      0001DE F7               [ 1]  478 	ld	(x), a
      0001DF CCr02rD3         [ 2]  479 	jp	00127$
      0001E2                        480 00105$:
                                    481 ;	./params.c: 235: } else if (paramCache[id] == 3) {
      0001E2 A3 00 03         [ 2]  482 	cpw	x, #0x0003
      0001E5 27 03            [ 1]  483 	jreq	00170$
      0001E7 CCr02rD3         [ 2]  484 	jp	00127$
      0001EA                        485 00170$:
                                    486 ;	./params.c: 236: ( (unsigned char*) strBuff) [2] = 0;
      0001EA 1E 08            [ 2]  487 	ldw	x, (0x08, sp)
      0001EC 5C               [ 1]  488 	incw	x
      0001ED 5C               [ 1]  489 	incw	x
      0001EE 7F               [ 1]  490 	clr	(x)
                                    491 ;	./params.c: 237: ( (unsigned char*) strBuff) [1] = '2';
      0001EF A6 32            [ 1]  492 	ld	a, #0x32
      0001F1 90 F7            [ 1]  493 	ld	(y), a
                                    494 ;	./params.c: 238: ( (unsigned char*) strBuff) [0] = 'A';
      0001F3 1E 08            [ 2]  495 	ldw	x, (0x08, sp)
      0001F5 A6 41            [ 1]  496 	ld	a, #0x41
      0001F7 F7               [ 1]  497 	ld	(x), a
                                    498 ;	./params.c: 241: break;
      0001F8 CCr02rD3         [ 2]  499 	jp	00127$
                                    500 ;	./params.c: 243: case PARAM_RELAY_HYSTERESIS:
      0001FB                        501 00113$:
                                    502 ;	./params.c: 244: itofpa (paramCache[id], strBuff, 0);
      0001FB 7B 07            [ 1]  503 	ld	a, (0x07, sp)
      0001FD 5F               [ 1]  504 	clrw	x
      0001FE 97               [ 1]  505 	ld	xl, a
      0001FF 58               [ 2]  506 	sllw	x
      000200 1Cr00r01         [ 2]  507 	addw	x, #(_paramCache + 0)
      000203 FE               [ 2]  508 	ldw	x, (x)
      000204 4B 00            [ 1]  509 	push	#0x00
      000206 16 09            [ 2]  510 	ldw	y, (0x09, sp)
      000208 90 89            [ 2]  511 	pushw	y
      00020A 89               [ 2]  512 	pushw	x
      00020B CDr03r2B         [ 4]  513 	call	_itofpa
      00020E 5B 05            [ 2]  514 	addw	sp, #5
                                    515 ;	./params.c: 245: break;
      000210 CCr02rD3         [ 2]  516 	jp	00127$
                                    517 ;	./params.c: 247: case PARAM_MAX_TEMPERATURE:
      000213                        518 00114$:
                                    519 ;	./params.c: 248: itofpa (paramCache[id], strBuff, 6);
      000213 7B 07            [ 1]  520 	ld	a, (0x07, sp)
      000215 5F               [ 1]  521 	clrw	x
      000216 97               [ 1]  522 	ld	xl, a
      000217 58               [ 2]  523 	sllw	x
      000218 1Cr00r01         [ 2]  524 	addw	x, #(_paramCache + 0)
      00021B FE               [ 2]  525 	ldw	x, (x)
      00021C 4B 06            [ 1]  526 	push	#0x06
      00021E 16 09            [ 2]  527 	ldw	y, (0x09, sp)
      000220 90 89            [ 2]  528 	pushw	y
      000222 89               [ 2]  529 	pushw	x
      000223 CDr03r2B         [ 4]  530 	call	_itofpa
      000226 5B 05            [ 2]  531 	addw	sp, #5
                                    532 ;	./params.c: 249: break;
      000228 CCr02rD3         [ 2]  533 	jp	00127$
                                    534 ;	./params.c: 251: case PARAM_MIN_TEMPERATURE:
      00022B                        535 00115$:
                                    536 ;	./params.c: 252: itofpa (paramCache[id], strBuff, 6);
      00022B 7B 07            [ 1]  537 	ld	a, (0x07, sp)
      00022D 5F               [ 1]  538 	clrw	x
      00022E 97               [ 1]  539 	ld	xl, a
      00022F 58               [ 2]  540 	sllw	x
      000230 1Cr00r01         [ 2]  541 	addw	x, #(_paramCache + 0)
      000233 FE               [ 2]  542 	ldw	x, (x)
      000234 4B 06            [ 1]  543 	push	#0x06
      000236 16 09            [ 2]  544 	ldw	y, (0x09, sp)
      000238 90 89            [ 2]  545 	pushw	y
      00023A 89               [ 2]  546 	pushw	x
      00023B CDr03r2B         [ 4]  547 	call	_itofpa
      00023E 5B 05            [ 2]  548 	addw	sp, #5
                                    549 ;	./params.c: 253: break;
      000240 CCr02rD3         [ 2]  550 	jp	00127$
                                    551 ;	./params.c: 255: case PARAM_TEMPERATURE_CORRECTION:
      000243                        552 00116$:
                                    553 ;	./params.c: 256: itofpa (paramCache[id], strBuff, 0);
      000243 7B 07            [ 1]  554 	ld	a, (0x07, sp)
      000245 5F               [ 1]  555 	clrw	x
      000246 97               [ 1]  556 	ld	xl, a
      000247 58               [ 2]  557 	sllw	x
      000248 1Cr00r01         [ 2]  558 	addw	x, #(_paramCache + 0)
      00024B FE               [ 2]  559 	ldw	x, (x)
      00024C 4B 00            [ 1]  560 	push	#0x00
      00024E 16 09            [ 2]  561 	ldw	y, (0x09, sp)
      000250 90 89            [ 2]  562 	pushw	y
      000252 89               [ 2]  563 	pushw	x
      000253 CDr03r2B         [ 4]  564 	call	_itofpa
      000256 5B 05            [ 2]  565 	addw	sp, #5
                                    566 ;	./params.c: 257: break;
      000258 20 79            [ 2]  567 	jra	00127$
                                    568 ;	./params.c: 259: case PARAM_RELAY_DELAY:
      00025A                        569 00117$:
                                    570 ;	./params.c: 260: itofpa (paramCache[id], strBuff, 6);
      00025A 7B 07            [ 1]  571 	ld	a, (0x07, sp)
      00025C 5F               [ 1]  572 	clrw	x
      00025D 97               [ 1]  573 	ld	xl, a
      00025E 58               [ 2]  574 	sllw	x
      00025F 1Cr00r01         [ 2]  575 	addw	x, #(_paramCache + 0)
      000262 FE               [ 2]  576 	ldw	x, (x)
      000263 4B 06            [ 1]  577 	push	#0x06
      000265 16 09            [ 2]  578 	ldw	y, (0x09, sp)
      000267 90 89            [ 2]  579 	pushw	y
      000269 89               [ 2]  580 	pushw	x
      00026A CDr03r2B         [ 4]  581 	call	_itofpa
      00026D 5B 05            [ 2]  582 	addw	sp, #5
                                    583 ;	./params.c: 261: break;
      00026F 20 62            [ 2]  584 	jra	00127$
                                    585 ;	./params.c: 265: case PARAM_AUTO_BRIGHT:
      000271                        586 00120$:
                                    587 ;	./params.c: 266: ( (unsigned char*) strBuff) [0] = 'O';
      000271 16 08            [ 2]  588 	ldw	y, (0x08, sp)
      000273 17 01            [ 2]  589 	ldw	(0x01, sp), y
      000275 93               [ 1]  590 	ldw	x, y
      000276 A6 4F            [ 1]  591 	ld	a, #0x4f
      000278 F7               [ 1]  592 	ld	(x), a
                                    593 ;	./params.c: 268: if (paramCache[id]) {
      000279 7B 07            [ 1]  594 	ld	a, (0x07, sp)
      00027B 5F               [ 1]  595 	clrw	x
      00027C 97               [ 1]  596 	ld	xl, a
      00027D 58               [ 2]  597 	sllw	x
      00027E 1Cr00r01         [ 2]  598 	addw	x, #(_paramCache + 0)
      000281 FE               [ 2]  599 	ldw	x, (x)
      000282 1F 03            [ 2]  600 	ldw	(0x03, sp), x
      000284 27 0F            [ 1]  601 	jreq	00122$
                                    602 ;	./params.c: 269: ( (unsigned char*) strBuff) [1] = 'N';
      000286 1E 01            [ 2]  603 	ldw	x, (0x01, sp)
      000288 5C               [ 1]  604 	incw	x
      000289 A6 4E            [ 1]  605 	ld	a, #0x4e
      00028B F7               [ 1]  606 	ld	(x), a
                                    607 ;	./params.c: 270: ( (unsigned char*) strBuff) [2] = ' ';
      00028C 1E 01            [ 2]  608 	ldw	x, (0x01, sp)
      00028E 5C               [ 1]  609 	incw	x
      00028F 5C               [ 1]  610 	incw	x
      000290 A6 20            [ 1]  611 	ld	a, #0x20
      000292 F7               [ 1]  612 	ld	(x), a
      000293 20 0D            [ 2]  613 	jra	00123$
      000295                        614 00122$:
                                    615 ;	./params.c: 272: ( (unsigned char*) strBuff) [1] = 'F';
      000295 1E 01            [ 2]  616 	ldw	x, (0x01, sp)
      000297 5C               [ 1]  617 	incw	x
      000298 A6 46            [ 1]  618 	ld	a, #0x46
      00029A F7               [ 1]  619 	ld	(x), a
                                    620 ;	./params.c: 273: ( (unsigned char*) strBuff) [2] = 'F';
      00029B 1E 01            [ 2]  621 	ldw	x, (0x01, sp)
      00029D 5C               [ 1]  622 	incw	x
      00029E 5C               [ 1]  623 	incw	x
      00029F A6 46            [ 1]  624 	ld	a, #0x46
      0002A1 F7               [ 1]  625 	ld	(x), a
      0002A2                        626 00123$:
                                    627 ;	./params.c: 276: ( (unsigned char*) strBuff) [3] = 0;
      0002A2 1E 01            [ 2]  628 	ldw	x, (0x01, sp)
      0002A4 6F 03            [ 1]  629 	clr	(0x0003, x)
                                    630 ;	./params.c: 277: break;
      0002A6 20 2B            [ 2]  631 	jra	00127$
                                    632 ;	./params.c: 279: case PARAM_THRESHOLD:
      0002A8                        633 00124$:
                                    634 ;	./params.c: 280: itofpa (paramCache[id], strBuff, 0);
      0002A8 7B 07            [ 1]  635 	ld	a, (0x07, sp)
      0002AA 5F               [ 1]  636 	clrw	x
      0002AB 97               [ 1]  637 	ld	xl, a
      0002AC 58               [ 2]  638 	sllw	x
      0002AD 1Cr00r01         [ 2]  639 	addw	x, #(_paramCache + 0)
      0002B0 FE               [ 2]  640 	ldw	x, (x)
      0002B1 4B 00            [ 1]  641 	push	#0x00
      0002B3 16 09            [ 2]  642 	ldw	y, (0x09, sp)
      0002B5 90 89            [ 2]  643 	pushw	y
      0002B7 89               [ 2]  644 	pushw	x
      0002B8 CDr03r2B         [ 4]  645 	call	_itofpa
      0002BB 5B 05            [ 2]  646 	addw	sp, #5
                                    647 ;	./params.c: 281: break;
      0002BD 20 14            [ 2]  648 	jra	00127$
                                    649 ;	./params.c: 283: default: // Display "OFF" to all unknown ID
      0002BF                        650 00125$:
                                    651 ;	./params.c: 284: ( (unsigned char*) strBuff) [0] = 'O';
      0002BF 16 08            [ 2]  652 	ldw	y, (0x08, sp)
      0002C1 A6 4F            [ 1]  653 	ld	a, #0x4f
      0002C3 90 F7            [ 1]  654 	ld	(y), a
                                    655 ;	./params.c: 285: ( (unsigned char*) strBuff) [1] = 'F';
      0002C5 93               [ 1]  656 	ldw	x, y
      0002C6 5C               [ 1]  657 	incw	x
      0002C7 A6 46            [ 1]  658 	ld	a, #0x46
      0002C9 F7               [ 1]  659 	ld	(x), a
                                    660 ;	./params.c: 286: ( (unsigned char*) strBuff) [2] = 'F';
      0002CA 93               [ 1]  661 	ldw	x, y
      0002CB 5C               [ 1]  662 	incw	x
      0002CC 5C               [ 1]  663 	incw	x
      0002CD A6 46            [ 1]  664 	ld	a, #0x46
      0002CF F7               [ 1]  665 	ld	(x), a
                                    666 ;	./params.c: 287: ( (unsigned char*) strBuff) [3] = 0;
      0002D0 93               [ 1]  667 	ldw	x, y
      0002D1 6F 03            [ 1]  668 	clr	(0x0003, x)
                                    669 ;	./params.c: 288: }
      0002D3                        670 00127$:
                                    671 ;	./params.c: 289: }
      0002D3 5B 04            [ 2]  672 	addw	sp, #4
      0002D5 81               [ 4]  673 	ret
                                    674 ;	./params.c: 294: void storeParams()
                                    675 ;	-----------------------------------------
                                    676 ;	 function storeParams
                                    677 ;	-----------------------------------------
      0002D6                        678 _storeParams:
      0002D6 52 02            [ 2]  679 	sub	sp, #2
                                    680 ;	./params.c: 299: if ( (FLASH_IAPSR & 0x08) == 0) {
      0002D8 C6 50 5F         [ 1]  681 	ld	a, 0x505f
      0002DB A5 08            [ 1]  682 	bcp	a, #0x08
      0002DD 26 08            [ 1]  683 	jrne	00112$
                                    684 ;	./params.c: 300: FLASH_DUKR = 0xAE;
      0002DF 35 AE 50 64      [ 1]  685 	mov	0x5064+0, #0xae
                                    686 ;	./params.c: 301: FLASH_DUKR = 0x56;
      0002E3 35 56 50 64      [ 1]  687 	mov	0x5064+0, #0x56
                                    688 ;	./params.c: 305: for (i = 0; i < paramLen; i++) {
      0002E7                        689 00112$:
      0002E7 4F               [ 1]  690 	clr	a
      0002E8                        691 00106$:
                                    692 ;	./params.c: 306: if (paramCache[i] != (* (int*) (EEPROM_BASE_ADDR + EEPROM_PARAMS_OFFSET
      0002E8 5F               [ 1]  693 	clrw	x
      0002E9 97               [ 1]  694 	ld	xl, a
      0002EA 58               [ 2]  695 	sllw	x
      0002EB 90 93            [ 1]  696 	ldw	y, x
      0002ED 1Cr00r01         [ 2]  697 	addw	x, #(_paramCache + 0)
      0002F0 FE               [ 2]  698 	ldw	x, (x)
      0002F1 1F 01            [ 2]  699 	ldw	(0x01, sp), x
                                    700 ;	./params.c: 307: + (i * sizeof paramCache[0]) ) ) ) {
      0002F3 72 A9 40 64      [ 2]  701 	addw	y, #0x4064
      0002F7 93               [ 1]  702 	ldw	x, y
      0002F8 FE               [ 2]  703 	ldw	x, (x)
      0002F9 13 01            [ 2]  704 	cpw	x, (0x01, sp)
      0002FB 27 04            [ 1]  705 	jreq	00107$
                                    706 ;	./params.c: 309: + (i * sizeof paramCache[0]) ) = paramCache[i];
      0002FD 93               [ 1]  707 	ldw	x, y
      0002FE 16 01            [ 2]  708 	ldw	y, (0x01, sp)
      000300 FF               [ 2]  709 	ldw	(x), y
      000301                        710 00107$:
                                    711 ;	./params.c: 305: for (i = 0; i < paramLen; i++) {
      000301 4C               [ 1]  712 	inc	a
      000302 A1 0A            [ 1]  713 	cp	a, #0x0a
      000304 25 E2            [ 1]  714 	jrc	00106$
                                    715 ;	./params.c: 314: FLASH_IAPSR &= ~0x08;
      000306 72 17 50 5F      [ 1]  716 	bres	20575, #3
                                    717 ;	./params.c: 315: }
      00030A 5B 02            [ 2]  718 	addw	sp, #2
      00030C 81               [ 4]  719 	ret
                                    720 ;	./params.c: 321: static void writeEEPROM (unsigned char val, unsigned char offset)
                                    721 ;	-----------------------------------------
                                    722 ;	 function writeEEPROM
                                    723 ;	-----------------------------------------
      00030D                        724 _writeEEPROM:
                                    725 ;	./params.c: 324: if ( (FLASH_IAPSR & 0x08) == 0) {
      00030D C6 50 5F         [ 1]  726 	ld	a, 0x505f
      000310 A5 08            [ 1]  727 	bcp	a, #0x08
      000312 26 08            [ 1]  728 	jrne	00102$
                                    729 ;	./params.c: 325: FLASH_DUKR = 0xAE;
      000314 35 AE 50 64      [ 1]  730 	mov	0x5064+0, #0xae
                                    731 ;	./params.c: 326: FLASH_DUKR = 0x56;
      000318 35 56 50 64      [ 1]  732 	mov	0x5064+0, #0x56
      00031C                        733 00102$:
                                    734 ;	./params.c: 330: (* (unsigned char*) (EEPROM_BASE_ADDR + offset) ) = val;
      00031C 7B 04            [ 1]  735 	ld	a, (0x04, sp)
      00031E 5F               [ 1]  736 	clrw	x
      00031F 1C 40 00         [ 2]  737 	addw	x, #16384
      000322 97               [ 1]  738 	ld	xl, a
      000323 7B 03            [ 1]  739 	ld	a, (0x03, sp)
      000325 F7               [ 1]  740 	ld	(x), a
                                    741 ;	./params.c: 333: FLASH_IAPSR &= ~0x08;
      000326 72 17 50 5F      [ 1]  742 	bres	20575, #3
                                    743 ;	./params.c: 334: }
      00032A 81               [ 4]  744 	ret
                                    745 ;	./params.c: 348: void itofpa (int val, unsigned char* str, unsigned char pointPosition)
                                    746 ;	-----------------------------------------
                                    747 ;	 function itofpa
                                    748 ;	-----------------------------------------
      00032B                        749 _itofpa:
      00032B 52 0D            [ 2]  750 	sub	sp, #13
                                    751 ;	./params.c: 350: unsigned char i, l, buffer[] = {0, 0, 0, 0, 0, 0};
      00032D 0F 01            [ 1]  752 	clr	(0x01, sp)
      00032F 96               [ 1]  753 	ldw	x, sp
      000330 6F 02            [ 1]  754 	clr	(2, x)
      000332 96               [ 1]  755 	ldw	x, sp
      000333 6F 03            [ 1]  756 	clr	(3, x)
      000335 96               [ 1]  757 	ldw	x, sp
      000336 6F 04            [ 1]  758 	clr	(4, x)
      000338 96               [ 1]  759 	ldw	x, sp
      000339 6F 05            [ 1]  760 	clr	(5, x)
      00033B 96               [ 1]  761 	ldw	x, sp
      00033C 6F 06            [ 1]  762 	clr	(6, x)
                                    763 ;	./params.c: 351: bool minus = false;
      00033E 0F 07            [ 1]  764 	clr	(0x07, sp)
                                    765 ;	./params.c: 354: if (val == 0) {
      000340 1E 10            [ 2]  766 	ldw	x, (0x10, sp)
      000342 26 0A            [ 1]  767 	jrne	00102$
                                    768 ;	./params.c: 355: ( (unsigned char*) str) [0] = '0';
      000344 1E 12            [ 2]  769 	ldw	x, (0x12, sp)
      000346 A6 30            [ 1]  770 	ld	a, #0x30
      000348 F7               [ 1]  771 	ld	(x), a
                                    772 ;	./params.c: 356: ( (unsigned char*) str) [1] = 0;
      000349 5C               [ 1]  773 	incw	x
      00034A 7F               [ 1]  774 	clr	(x)
                                    775 ;	./params.c: 357: return;
      00034B CCr04r2A         [ 2]  776 	jp	00119$
      00034E                        777 00102$:
                                    778 ;	./params.c: 361: if (val < 0) {
      00034E 0D 10            [ 1]  779 	tnz	(0x10, sp)
      000350 2A 09            [ 1]  780 	jrpl	00104$
                                    781 ;	./params.c: 362: minus = true;
      000352 A6 01            [ 1]  782 	ld	a, #0x01
      000354 6B 07            [ 1]  783 	ld	(0x07, sp), a
                                    784 ;	./params.c: 363: val = -val;
      000356 1E 10            [ 2]  785 	ldw	x, (0x10, sp)
      000358 50               [ 2]  786 	negw	x
      000359 1F 10            [ 2]  787 	ldw	(0x10, sp), x
      00035B                        788 00104$:
                                    789 ;	./params.c: 367: for (i = 0; val != 0; i++) {
      00035B 0F 0D            [ 1]  790 	clr	(0x0d, sp)
      00035D                        791 00114$:
                                    792 ;	./params.c: 368: buffer[i] = '0' + (val % 10);
      00035D 5F               [ 1]  793 	clrw	x
      00035E 7B 0D            [ 1]  794 	ld	a, (0x0d, sp)
      000360 97               [ 1]  795 	ld	xl, a
      000361 89               [ 2]  796 	pushw	x
      000362 96               [ 1]  797 	ldw	x, sp
      000363 1C 00 03         [ 2]  798 	addw	x, #3
      000366 72 FB 01         [ 2]  799 	addw	x, (1, sp)
      000369 1F 0A            [ 2]  800 	ldw	(0x0a, sp), x
      00036B 5B 02            [ 2]  801 	addw	sp, #2
                                    802 ;	./params.c: 371: i++;
      00036D 7B 0D            [ 1]  803 	ld	a, (0x0d, sp)
      00036F 4C               [ 1]  804 	inc	a
      000370 6B 0A            [ 1]  805 	ld	(0x0a, sp), a
                                    806 ;	./params.c: 367: for (i = 0; val != 0; i++) {
      000372 1E 10            [ 2]  807 	ldw	x, (0x10, sp)
      000374 27 43            [ 1]  808 	jreq	00107$
                                    809 ;	./params.c: 368: buffer[i] = '0' + (val % 10);
      000376 4B 0A            [ 1]  810 	push	#0x0a
      000378 4B 00            [ 1]  811 	push	#0x00
      00037A 1E 12            [ 2]  812 	ldw	x, (0x12, sp)
      00037C 89               [ 2]  813 	pushw	x
      00037D CDr00r00         [ 4]  814 	call	__modsint
      000380 5B 04            [ 2]  815 	addw	sp, #4
      000382 9F               [ 1]  816 	ld	a, xl
      000383 AB 30            [ 1]  817 	add	a, #0x30
      000385 1E 08            [ 2]  818 	ldw	x, (0x08, sp)
      000387 F7               [ 1]  819 	ld	(x), a
                                    820 ;	./params.c: 370: if (i == pointPosition) {
      000388 7B 0D            [ 1]  821 	ld	a, (0x0d, sp)
      00038A 11 14            [ 1]  822 	cp	a, (0x14, sp)
      00038C 26 19            [ 1]  823 	jrne	00106$
                                    824 ;	./params.c: 371: i++;
      00038E 7B 0A            [ 1]  825 	ld	a, (0x0a, sp)
      000390 6B 0D            [ 1]  826 	ld	(0x0d, sp), a
                                    827 ;	./params.c: 372: buffer[i] = '.';
      000392 5F               [ 1]  828 	clrw	x
      000393 7B 0D            [ 1]  829 	ld	a, (0x0d, sp)
      000395 97               [ 1]  830 	ld	xl, a
      000396 89               [ 2]  831 	pushw	x
      000397 96               [ 1]  832 	ldw	x, sp
      000398 1C 00 03         [ 2]  833 	addw	x, #3
      00039B 72 FB 01         [ 2]  834 	addw	x, (1, sp)
      00039E 1F 0D            [ 2]  835 	ldw	(0x0d, sp), x
      0003A0 5B 02            [ 2]  836 	addw	sp, #2
      0003A2 1E 0B            [ 2]  837 	ldw	x, (0x0b, sp)
      0003A4 A6 2E            [ 1]  838 	ld	a, #0x2e
      0003A6 F7               [ 1]  839 	ld	(x), a
      0003A7                        840 00106$:
                                    841 ;	./params.c: 375: val /= 10;
      0003A7 4B 0A            [ 1]  842 	push	#0x0a
      0003A9 4B 00            [ 1]  843 	push	#0x00
      0003AB 1E 12            [ 2]  844 	ldw	x, (0x12, sp)
      0003AD 89               [ 2]  845 	pushw	x
      0003AE CDr00r00         [ 4]  846 	call	__divsint
      0003B1 5B 04            [ 2]  847 	addw	sp, #4
      0003B3 1F 10            [ 2]  848 	ldw	(0x10, sp), x
                                    849 ;	./params.c: 367: for (i = 0; val != 0; i++) {
      0003B5 0C 0D            [ 1]  850 	inc	(0x0d, sp)
      0003B7 20 A4            [ 2]  851 	jra	00114$
      0003B9                        852 00107$:
                                    853 ;	./params.c: 379: if (buffer[i - 1] == '.') {
      0003B9 7B 0D            [ 1]  854 	ld	a, (0x0d, sp)
      0003BB 4A               [ 1]  855 	dec	a
      0003BC 6B 0C            [ 1]  856 	ld	(0x0c, sp), a
      0003BE 49               [ 1]  857 	rlc	a
      0003BF 4F               [ 1]  858 	clr	a
      0003C0 A2 00            [ 1]  859 	sbc	a, #0x00
      0003C2 6B 0B            [ 1]  860 	ld	(0x0b, sp), a
      0003C4 96               [ 1]  861 	ldw	x, sp
      0003C5 1C 00 01         [ 2]  862 	addw	x, #1
      0003C8 72 FB 0B         [ 2]  863 	addw	x, (0x0b, sp)
      0003CB F6               [ 1]  864 	ld	a, (x)
      0003CC A1 2E            [ 1]  865 	cp	a, #0x2e
      0003CE 26 09            [ 1]  866 	jrne	00109$
                                    867 ;	./params.c: 380: buffer[i] = '0';
      0003D0 1E 08            [ 2]  868 	ldw	x, (0x08, sp)
      0003D2 A6 30            [ 1]  869 	ld	a, #0x30
      0003D4 F7               [ 1]  870 	ld	(x), a
                                    871 ;	./params.c: 381: i++;
      0003D5 7B 0A            [ 1]  872 	ld	a, (0x0a, sp)
      0003D7 6B 0D            [ 1]  873 	ld	(0x0d, sp), a
      0003D9                        874 00109$:
                                    875 ;	./params.c: 385: if (minus) {
      0003D9 0D 07            [ 1]  876 	tnz	(0x07, sp)
      0003DB 27 13            [ 1]  877 	jreq	00111$
                                    878 ;	./params.c: 386: buffer[i] = '-';
      0003DD 5F               [ 1]  879 	clrw	x
      0003DE 7B 0D            [ 1]  880 	ld	a, (0x0d, sp)
      0003E0 97               [ 1]  881 	ld	xl, a
      0003E1 89               [ 2]  882 	pushw	x
      0003E2 96               [ 1]  883 	ldw	x, sp
      0003E3 1C 00 03         [ 2]  884 	addw	x, #3
      0003E6 72 FB 01         [ 2]  885 	addw	x, (1, sp)
      0003E9 5B 02            [ 2]  886 	addw	sp, #2
      0003EB A6 2D            [ 1]  887 	ld	a, #0x2d
      0003ED F7               [ 1]  888 	ld	(x), a
                                    889 ;	./params.c: 387: i++;
      0003EE 0C 0D            [ 1]  890 	inc	(0x0d, sp)
      0003F0                        891 00111$:
                                    892 ;	./params.c: 391: for (l = i; i > 0; i--) {
      0003F0 7B 0D            [ 1]  893 	ld	a, (0x0d, sp)
      0003F2 6B 0C            [ 1]  894 	ld	(0x0c, sp), a
      0003F4                        895 00117$:
      0003F4 0D 0D            [ 1]  896 	tnz	(0x0d, sp)
      0003F6 27 2A            [ 1]  897 	jreq	00112$
                                    898 ;	./params.c: 392: ( (unsigned char*) str) [l - i] = buffer[i - 1];
      0003F8 5F               [ 1]  899 	clrw	x
      0003F9 7B 0C            [ 1]  900 	ld	a, (0x0c, sp)
      0003FB 97               [ 1]  901 	ld	xl, a
      0003FC 7B 0D            [ 1]  902 	ld	a, (0x0d, sp)
      0003FE 6B 0B            [ 1]  903 	ld	(0x0b, sp), a
      000400 0F 0A            [ 1]  904 	clr	(0x0a, sp)
      000402 72 F0 0A         [ 2]  905 	subw	x, (0x0a, sp)
      000405 72 FB 12         [ 2]  906 	addw	x, (0x12, sp)
      000408 51               [ 1]  907 	exgw	x, y
      000409 7B 0D            [ 1]  908 	ld	a, (0x0d, sp)
      00040B 4A               [ 1]  909 	dec	a
      00040C 6B 0B            [ 1]  910 	ld	(0x0b, sp), a
      00040E 49               [ 1]  911 	rlc	a
      00040F 4F               [ 1]  912 	clr	a
      000410 A2 00            [ 1]  913 	sbc	a, #0x00
      000412 6B 0A            [ 1]  914 	ld	(0x0a, sp), a
      000414 96               [ 1]  915 	ldw	x, sp
      000415 1C 00 01         [ 2]  916 	addw	x, #1
      000418 72 FB 0A         [ 2]  917 	addw	x, (0x0a, sp)
      00041B F6               [ 1]  918 	ld	a, (x)
      00041C 90 F7            [ 1]  919 	ld	(y), a
                                    920 ;	./params.c: 391: for (l = i; i > 0; i--) {
      00041E 0A 0D            [ 1]  921 	dec	(0x0d, sp)
      000420 20 D2            [ 2]  922 	jra	00117$
      000422                        923 00112$:
                                    924 ;	./params.c: 396: ( (unsigned char*) str) [l] = 0;
      000422 5F               [ 1]  925 	clrw	x
      000423 7B 0C            [ 1]  926 	ld	a, (0x0c, sp)
      000425 97               [ 1]  927 	ld	xl, a
      000426 72 FB 12         [ 2]  928 	addw	x, (0x12, sp)
      000429 7F               [ 1]  929 	clr	(x)
      00042A                        930 00119$:
                                    931 ;	./params.c: 397: }
      00042A 5B 0D            [ 2]  932 	addw	sp, #13
      00042C 81               [ 4]  933 	ret
                                    934 	.area CODE
                                    935 	.area CONST
      000000                        936 _paramMin:
      000000 00 00                  937 	.dw #0x0000
      000002 00 01                  938 	.dw #0x0001
      000004 FF D3                  939 	.dw #0xffd3
      000006 FF CE                  940 	.dw #0xffce
      000008 FF BA                  941 	.dw #0xffba
      00000A 00 00                  942 	.dw #0x0000
      00000C 00 00                  943 	.dw #0x0000
      00000E 00 00                  944 	.dw #0x0000
      000010 00 00                  945 	.dw #0x0000
      000012 FE 0C                  946 	.dw #0xfe0c
      000014                        947 _paramMax:
      000014 00 03                  948 	.dw #0x0003
      000016 00 96                  949 	.dw #0x0096
      000018 00 6E                  950 	.dw #0x006e
      00001A 00 69                  951 	.dw #0x0069
      00001C 00 46                  952 	.dw #0x0046
      00001E 00 0A                  953 	.dw #0x000a
      000020 00 01                  954 	.dw #0x0001
      000022 00 00                  955 	.dw #0x0000
      000024 00 00                  956 	.dw #0x0000
      000026 04 4C                  957 	.dw #0x044c
      000028                        958 _paramDefault:
      000028 00 00                  959 	.dw #0x0000
      00002A 00 14                  960 	.dw #0x0014
      00002C 00 6E                  961 	.dw #0x006e
      00002E FF CE                  962 	.dw #0xffce
      000030 00 00                  963 	.dw #0x0000
      000032 00 00                  964 	.dw #0x0000
      000034 00 00                  965 	.dw #0x0000
      000036 00 00                  966 	.dw #0x0000
      000038 00 00                  967 	.dw #0x0000
      00003A 01 18                  968 	.dw #0x0118
                                    969 	.area INITIALIZER
                                    970 	.area CABS (ABS)
