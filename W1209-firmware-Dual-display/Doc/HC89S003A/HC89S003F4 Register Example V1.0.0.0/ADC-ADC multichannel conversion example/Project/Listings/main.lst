C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:31:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\SoftWare\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          //ADC multichannel conversion example
   3          
   4          #define ALLOCATE_EXTERN
   5          #include "HC89S003F4.h"
   6                                  
   7          void Delay_2us(unsigned int fui_i);                               //delay function
   8                                  
   9          unsigned int  gui_AdcValue_a[2] = {0x00};               //delay function
  10          unsigned char guc_AdcChannel_a[2] = {0x01,0x02};        //ADC channel
  11          unsigned char guc_Count = 0;                                          //Switch channel count
  12          
  13          /***************************************************************************************
  14            * @Function   ADC conversion for AN1 and AN2
  15          ***************************************************************************************/
  16          void main()
  17          {
  18   1      /************************************system initialization****************************************/
  19   1              WDTCCR = 0x00;                                          //Close watchdog
  20   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  21   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  22   1              
  23   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  24   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz 
  25   1      
  26   1              P0M0 = P0M0&0xF0|0x08;          //Set P00 as push-pull output
  27   1              P1M0 = P1M0&0xF0|0x08;          //Set P10 as push-pull output
  28   1      /************************************ADC initialization*****************************************/
  29   1              P0M0 = P0M0&0x0F|0x30;          //Set P01 as analog inputSet P01 as analog input
  30   1              P0M1 = P0M1&0xF0|0x03;          //Set P02 as analog input
  31   1              ADCC0 = 0x80;                                             //enable ADC power
  32   1              Delay_2us(10);                                          //delay 20us
  33   1              ADCC1 = 0x01;                                           //Select external channel 1
  34   1              ADCC2 = 0x4D;                                           //12bits, Right alignment of data, adc_clk frequency = Fosc/16 
  35   1              IE1 |= 0x20;                                            //enable ADC interrupt                                  
  36   1              EA = 1;                                                         //enable all interrupt
  37   1              ADCC0 &=~ 0x20;                                         //Clear ADC interrupt flag bit 
  38   1              ADCC0 |= 0x40;                                          //Start ADC
  39   1      
  40   1              while(1)
  41   1              {
  42   2                      if(gui_AdcValue_a[0] <= 0x10)
  43   2           {
  44   3                          P0_0 = 1;
  45   3                         }
  46   2                      else
  47   2           {
  48   3                          P0_0 = 0;
  49   3                         }
  50   2                      if(gui_AdcValue_a[1] <= 0x10)
  51   2           {
  52   3                          P1_0 = 1;
  53   3                         }
C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:31:08 PAGE 2   

  54   2                      else
  55   2           {
  56   3                          P1_0 = 0;
  57   3                         }
  58   2              }
  59   1      }
  60          
  61          /***************************************************************************************
  62             ADC interrupt service function
  63          ***************************************************************************************/
  64          void ADC_Rpt() interrupt ADC_VECTOR
  65          {
  66   1              ADCC0 &=~ 0x20;                                                                      //Clear flag bit
  67   1              gui_AdcValue_a[guc_Count++] = ADCR;                          //Get the value of the ADC
  68   1              if(guc_Count==2)guc_Count=0;
  69   1              ADCC1 = (ADCC1&(~0x07))|(guc_AdcChannel_a[guc_Count]);   //Switching channel
  70   1              Delay_2us(10);                                                                         //delay 20us
  71   1              ADCC0 |= 0x40;                                                                         //Start ADC
  72   1      } 
  73          
  74          /**
  75            * Delay function 
  76            * Fcpu = 16MHz,fui_i = 1,The delay time is about 2us
  77            */
  78          void Delay_2us(unsigned int fui_i)
  79          {
  80   1              while(fui_i--); 
  81   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    230    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
