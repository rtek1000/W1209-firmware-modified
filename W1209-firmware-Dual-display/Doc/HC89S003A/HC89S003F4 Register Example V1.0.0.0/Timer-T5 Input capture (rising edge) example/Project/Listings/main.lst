C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:53:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\SoftWare\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //Timer-T5 input capture (rising edge)
   2          
   3          #define ALLOCATE_EXTERN
   4          #include "HC89S003F4.h"
   5          #include "stdio.h"
   6          
   7          unsigned int gui_T5Value;             //T5 capture acquisition value
   8          void Delay_ms(unsigned int fui_i);    //Delay function
   9          /***************************************************************************************
  10            * @Function     Set T5 to capture mode, capture the high and low pulse width of P01 port, and output from 
             -the serial port
  11            * @Steps        P01->P00 connection£¬TXD is P2_1
  12          ***************************************************************************************/
  13          void main() 
  14          {
  15   1      /************************************System initialization ****************************************/
  16   1              WDTCCR = 0x00;                                          //Close watchdog
  17   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  18   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  19   1              
  20   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  21   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz 
  22   1              P0M0 = P0M0&0xF0|0x08;              //Set P00 as push-pull output       
  23   1      /**********************************UART initialization**************************************/
  24   1              P2M0 = P2M0&0x0F|0x80;                          //Set P21 as push-pull output
  25   1              TXD_MAP = 0x21;                                     //TXD mapping P21           
  26   1              T4CON = 0x06;                                           //T4 working mode: UART1 baud rate generator
  27   1      
  28   1          TH4 = 0xFF;
  29   1              TL4 = 0x98;                                                     //Baud rate 9600
  30   1              SCON2 = 0x02;                                           //8-bit UART, variable baud rate        
  31   1      /**********************************TIM5 initialization**************************************/
  32   1          P0M0 = P0M0&0x0F|0x20;              //Set P01 as pull-up input
  33   1              T5_MAP = 0x01;                                          //T5 capture port mapping P01 port
  34   1              T5CON = 0x1F;                                           //Clock divided by 8, 16-bit falling edge capture
  35   1              T5CON1 = 0x00;                                          //T5 capture type selects the changing edge of T5 pin
  36   1              TH5 = 0x00;
  37   1              TL5 = 0x00;                                                     //Clear count
  38   1              IE1 |= 0x10;                                        //Turn on T5 Interrupt
  39   1              EA = 1;
  40   1              while(1)
  41   1              {  
  42   2                P0_0 = ~P0_0;
  43   2                Delay_ms(1);
  44   2              }
  45   1      }
  46          
  47          /***************************************************************************************
  48           T5 interrupt service function
  49          ***************************************************************************************/
  50          void TIMER5_Rpt(void) interrupt T5_VECTOR
  51          {
  52   1              if(T5CON&0x40)                       //Determine whether it is an external event
C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:53:09 PAGE 2   

  53   1              {
  54   2                      gui_T5Value = RCAP5/2;                          //Read the acquired data and convert the unit to 1 us
  55   2                      printf("\nCapture time£º%d us\n",gui_T5Value);
  56   2                      T5CON &=~ 0x40;                                                 //Clear pin external input event occurrence flag        
  57   2                      TH5 = 0x00;
  58   2                      TL5 = 0x00;     
  59   2              }
  60   1              if(T5CON&0x80)
  61   1              {
  62   2                      T5CON &=~ 0x80;                                                  //Clear T5-flag bit
  63   2              }
  64   1      }
  65          
  66          /**
  67            * Putc function 
  68            * Use printf function to print output from serial port 1
  69            */
  70          char putchar(char guc_Uartbuf)
  71          {
  72   1              SBUF = guc_Uartbuf;                   //Send 8-bit serial data
  73   1              while(!(SCON & 0x02));
  74   1              SCON &=~ 0x02;                                //Clear send-flag bit
  75   1              return guc_Uartbuf;
  76   1      }
  77          /**
  78            * Delay function 
  79            * Fcpu = 16MHz,fui_i = 1,The delay time is about 1Ms
  80            */
  81          void Delay_ms(unsigned int fui_i)
  82          {
  83   1              unsigned int fui_j;
  84   1              for(;fui_i > 0;fui_i --)
  85   1              for(fui_j = 1596;fui_j > 0;fui_j --);
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    236    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
