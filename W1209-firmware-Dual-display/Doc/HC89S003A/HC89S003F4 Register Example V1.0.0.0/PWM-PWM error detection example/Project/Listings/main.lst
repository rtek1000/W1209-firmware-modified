C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:45:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\SoftWare\Keil\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //PWM error detection
   2          
   3          #define ALLOCATE_EXTERN
   4          #include "HC89S003F4.h"
   5          
   6          /***************************************************************************************
   7            * @Function   P22, P10 output a square wave with a frequency of 1.955KHz and a duty cycle of 33.4%. 
   8                          If P02 inputs a low level, P22, P10 output a high level  
   9          ***************************************************************************************/
  10          void main()
  11          {
  12   1      /************************************System initialization ****************************************/
  13   1              WDTCCR = 0x00;                                          //Close watchdog
  14   1                                        //In this example, the watchdog is closed for the convenience of testing. 
  15   1                                        //In practical use, it is recommended to open the watchdog. See WDT Reset examp
             -le for details
  16   1              
  17   1              CLKSWR = 0x51;                                          //Select internal RC32M as system clock, RC32M/2, Fosc=16MHz
  18   1              CLKDIV = 0x01;                                          //Fosc/1,Fcpu=16MHz 
  19   1              P0M0 = P0M0&0xF0|0x08;              //Set P00 as push-pull output
  20   1      /*************************************PWM initialization****************************************/
  21   1              P2M1 = P2M1&0xF0|0x08;                  //Set P22 as push-pull output
  22   1              P1M0 = P1M0&0xF0|0x08;              //Set P10 as push-pull output
  23   1              P0M1 = P0M1&0xF0|0x02;              //Set P02 as pull-up input
  24   1              PWM2_MAP = 0x22;                                        //PWM2 channel mapping P22 port
  25   1              PWM21_MAP = 0x10;                                       //PWM21 channel mapping P10 port
  26   1              PWM2C = 0x01;                                           //PWM clock divided by 8
  27   1      
  28   1              //Period calculation = 0x03ff / (Fosc / PWM frequency division factor)
  29   1              //                      = 0x03ff /(16000000 / 8)                        
  30   1              //                      = 1023  /2000000
  31   1              //                      = 511.5us                     about 1.955KHZ
  32   1              PWM2PH = 0x03;                                          //The upper 4 bits of the period Register are 0x03
  33   1              PWM2PL = 0xFF;                                          //The lower 8 bits of the period Register are 0xFF
  34   1      
  35   1              //Duty cycle calculation = 0x0155 / (Fosc / PWM frequency division factor)      
  36   1              //                      = 0x0155 /(16000000 / 8)                        
  37   1              //                      = 341    /2000000
  38   1              //                      = 170.5us                     duty cycle: 170.5/511.5 = 33.4%
  39   1              PWM2DH = 0x01;                                          //The upper 4 bits of the duty cycle Register are 0x01
  40   1              PWM2DL = 0x55;                                          //The lower 8 bits of the duty cycle Register are 0x55
  41   1              PWM2EN = 0x77;                                          //Work in complementary mode, output high level when fault occurs
  42   1          
  43   1              while(1);
  44   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     79    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              01/05/2021 11:45:44 PAGE 2   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
